# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Paul Vincent Craven
# This file is distributed under the same license as the Arcade package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
# derSuessmann <arcade-book-de@dersuessmann.de>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Arcade Fall 2018\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-11 13:34+0200\n"
"PO-Revision-Date: 2019-07-16 11:10+0200\n"
"Last-Translator: derSuessmann <arcade-book-de@dersuessmann.de>\n"
"Language: de\n"
"Language-Team: German <arcade-book-de@dersuessmann.de>\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"
"X-Generator: Gtranslator 3.32.1\n"

#: ../../source/chapters/10_if_statements/if_statements.rst:2
msgid "If Statements"
msgstr "Wenn-dann-Anweisungen"

#: ../../source/chapters/10_if_statements/if_statements.rst:4
msgid ""
"How do we tell if a player has beat the high score? How can we tell if he "
"has run out of lives? How can we tell if she has the key required to open "
"the locked door?"
msgstr ""
"Wie stellen wir fest, ob eine Spielerin den Highscore gebrochen hat? Wie "
"können wir feststellen, ob sie alle Leben aufgebraucht hat? Wie können wir "
"feststellen, ob sie den Schlüssel besitzt, um die verschlossene Tür zu "
"öffnen?"

#: ../../source/chapters/10_if_statements/if_statements.rst:9
msgid ""
"What we need is the ``if`` statement. The ``if`` statement is also known as "
"a *conditional statement*. (You can use the term \"conditional statement\" "
"when you want to impress everyone how smart you are.) The if statement "
"allows a computer to make a decision. Is it hot outside? Has the spaceship "
"reached the edge of the screen? Has too much money been withdrawn from the "
"account? A program can test for these conditions with the ``if`` statement."
msgstr ""
"Was wir brauchen, ist die ``if``-Anweisung. Die ``if``-Anweisung kennt man "
"auch als *bedingte Anweisung*. (Du kannst \"bedingte Anweisung\" gerne "
"verwenden, um anderen zu zeigen, dass du etwas vom Programmieren verstehst.) "
"Die ``if``-Anweisung erlaubt einem Rechner eine Entscheidung zu fällen. Ist "
"es heiß draußen? Hat das Raumschiff die Kante des Bildschirms erreicht? "
"Wurde zu viel Geld vom Konto abgehoben? Ein Programm kann diese Bedingungen "
"mit der ``if``-Anweisung überprüfen."

#: ../../source/chapters/10_if_statements/if_statements.rst:17
msgid "Basic Comparisons"
msgstr "Einfache Vergleiche"

#: ../../source/chapters/10_if_statements/if_statements.rst:19
msgid ""
"Here are a few examples of ``if`` statements. The first section sets up two "
"variables (a and b) for use in the ``if`` statements. Then two ``if`` "
"statements show how to compare the variables to see if one is greater than "
"the other."
msgstr ""
"Hier folgen ein paar Beispiele von bedingten Anweisungen. Der erste "
"Abschnitt besteht aus zwei Variablen (``a`` und ``b``) zur Verwendung in "
"bedingten Anweisungen. Danach folgen zwei ``if``-Anweisungen, die zeigen wie "
"man die beiden Variablen vergleicht, um festzustellen ob eine größer als die "
"andere ist."

#: ../../source/chapters/10_if_statements/if_statements.rst:23
msgid "Example ``if`` statements: less than, greater than"
msgstr "Beispiel bedingte Anweisungen: kleiner, größer als"

#: ../../source/chapters/10_if_statements/if_statements.rst:23
msgid ""
"# Variables used in the example ``if`` statements\n"
"a = 4\n"
"b = 5\n"
"\n"
"# Basic comparisons\n"
"if a < b:\n"
"    print(\"a is less than b\")\n"
"\n"
"if a > b:\n"
"    print(\"a is greater than b\")\n"
"\n"
"print(\"Done\")"
msgstr ""
"# Variables used in the example ``if`` statements\n"
"a = 4\n"
"b = 5\n"
"\n"
"# Basic comparisons\n"
"if a < b:\n"
"    print(\"a is less than b\")\n"
"\n"
"if a > b:\n"
"    print(\"a is greater than b\")\n"
"\n"
"print(\"Done\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:40
msgid "Output"
msgstr "Ausgabe"

#: ../../source/chapters/10_if_statements/if_statements.rst:40
msgid ""
"a is less than b\n"
"Done"
msgstr ""
"a is less than b\n"
"Done"

#: ../../source/chapters/10_if_statements/if_statements.rst:46
msgid ""
"Since ``a`` is less than ``b``, the first statement will print out if this "
"code is run. If the variables ``a`` and ``b`` were both equal to 4, then "
"neither of the two ``if`` statements above would print anything out. The "
"number 4 is not greater than 4, so the ``if`` statement would fail."
msgstr ""
"Da ``a`` kleiner als ``b`` ist, sorgt die erste bedingte Anweisung dafür, "
"dass dies ausgegeben wird. Wenn die beiden Variablen beide gleich 4 wären, "
"würde keine der beiden bedingten Anweisungen oben etwas ausgeben. Die Zahl 4 "
"ist nicht größer als 4, also wird die ``if``-Anweisung fehlschlagen."

#: ../../source/chapters/10_if_statements/if_statements.rst:51
msgid ""
"To show the flow of a program a *flowchart* may be used. Most people can "
"follow a flowchart even without an introduction to programming. See how well "
"you can understand the figure below."
msgstr ""
"Um den Ablauf eines Programms darzustellen, kann man einen "
"*Programmablaufplan* verwenden. Die meisten Leute können einem "
"Programmablaufplan folgen, auch wenn sie noch gar keine Einführung ins "
"Programmieren hatten. Probiere aus, wie gut du die Abbildung unten verstehst."

#: ../../source/chapters/10_if_statements/if_statements.rst:58
msgid ".. image:: chapters/10_if_statements/flowchart1.png"
msgstr ".. image:: chapters/10_if_statements/flowchart1.png"

#: ../../source/chapters/10_if_statements/if_statements.rst:58
msgid "Flowchart"
msgstr "Programmablaufplan"

#: ../../source/chapters/10_if_statements/if_statements.rst:60
msgid ""
"This book skips an in-depth look at flowcharting because it is boring. But "
"if you want to be a superstar programmer, please read more about it at:"
msgstr ""
"In diesem Buch überspringen wir die Erstellung von Programmablaufplänen, "
"weil es langweilig ist. Wenn du aber ein Spitzenprogrammierer werden willst, "
"dann lies bitte hier weiter:"

#: ../../source/chapters/10_if_statements/if_statements.rst:63
msgid "http://en.wikipedia.org/wiki/Flowchart"
msgstr "https://de.wikipedia.org/wiki/Programmablaufplan"

#: ../../source/chapters/10_if_statements/if_statements.rst:65
msgid ""
"The prior example checked for greater than or less than. Numbers that were "
"equal would not pass the test. To check for a values greater than or equal, "
"the following examples show how to do this:"
msgstr ""
"Das vorige Beispiel hat auf größer oder kleiner als überprüft. Zahlen die "
"gleich groß sind, würden diesen Test nicht bestehen. Das folgende Beispiel "
"zeigt dir, wie man überprüft, ob Werte größer oder gleich sind:"

#: ../../source/chapters/10_if_statements/if_statements.rst:69
msgid "Example ``if`` statements: less than or equal, greater than or equal"
msgstr "Beispiel bedingte Anweisungen: kleiner oder gleich, größer oder gleich"

#: ../../source/chapters/10_if_statements/if_statements.rst:69
msgid ""
"if a <= b:\n"
"    print(\"a is less than or equal to b\")\n"
"\n"
"if a >= b:\n"
"    print(\"a is greater than or equal to b\")"
msgstr ""
"if a <= b:\n"
"    print(\"a is less than or equal to b\")\n"
"\n"
"if a >= b:\n"
"    print(\"a is greater than or equal to b\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:79
msgid ""
"The ``<=`` and ``>=`` symbols must be used in order, and there may not be a "
"space between them. For example, ``=<`` will not work, nor will ``< =``."
msgstr ""
"Die Zeichen ``<=`` und ``>=`` müssen in dieser Reihenfolge stehen und es "
"darf kein Leerzeichen zwischen ihnen stehen. Zum Beispiel wird ``=<`` und "
"auch ``< =`` nicht funktionieren."

#: ../../source/chapters/10_if_statements/if_statements.rst:82
msgid ""
"When writing these statements out on a test, some students like to use the "
"``≤`` symbol. For example:"
msgstr ""
"In einer Klausur schreiben die Studenten diese Anweisungen gerne mit dem "
"Zeichen ``≤``. Zum Beispiel:"

#: ../../source/chapters/10_if_statements/if_statements.rst:85
msgid "if a ≤ b:"
msgstr "if a ≤ b:"

#: ../../source/chapters/10_if_statements/if_statements.rst:89
msgid ""
"This ``≤`` symbol doesn't actually work in a program. Plus most people don't "
"know how to easily type it on the keyboard. (Just in case you are curious, "
"to type it hold down the 'alt' key while typing 243 on the number pad.) So "
"when writing out code, remember that it is ``<=`` and not ``≤``. Many people "
"lose points on tests for this reason; don't be that person."
msgstr ""
"Das Zeichen ``≤`` funktioniert tatsächlich nicht in einem Programm. Außerdem "
"wissen die meisten nicht, wie man einfach dieses Zeichen auf der Tastatur "
"eingibt. (Nur falls du neugierig bist, drücke die 'alt'-Taste, während du "
"243 auf dem Tastenfeld eingibst.) Also merke dir ``<=`` und nicht ``≤``, "
"wenn du Code eingibst. Viele verlieren an dieser Stelle Punkte in Klausuren. "
"Vermeide zu diesen zu gehören."

#: ../../source/chapters/10_if_statements/if_statements.rst:95
msgid ""
"The next set of code checks to see if two items are equal or not. The "
"operator for equal is ``==`` and the operator for not equal is ``!=``. Here "
"they are in action."
msgstr ""
"Der nächste Programmschnipsel überprüft, ob zwei Elemente gleich sind oder "
"nicht. Der Operator für Gleichheit ist ``==`` und der Operator für "
"Ungleichheit ist ``!=``. Hier sind sie in Aktion."

#: ../../source/chapters/10_if_statements/if_statements.rst:99
msgid "Example ``if`` statements: equal not equal"
msgstr "Beispiel bedingte Anweisungen: gleich, nicht gleich"

#: ../../source/chapters/10_if_statements/if_statements.rst:99
msgid ""
"# Equal\n"
"if a == b:\n"
"    print(\"a is equal to b\")\n"
"\n"
"# Not equal\n"
"if a != b:\n"
"    print(\"a and b are not equal\")"
msgstr ""
"# Equal\n"
"if a == b:\n"
"    print(\"a is equal to b\")\n"
"\n"
"# Not equal\n"
"if a != b:\n"
"    print(\"a and b are not equal\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:111
msgid "Learn when to use = and ==."
msgstr "Lerne wann ``=`` und wann ``==`` verwendet werden müssen."

#: ../../source/chapters/10_if_statements/if_statements.rst:113
msgid ""
"It is very easy to mix up when to use ``==`` and ``=``. Use ``==`` if you "
"are asking if they are equal, use ``=`` if you are assigning a value."
msgstr ""
"Es ist leicht ``==`` und ``=`` zu verwechseln. Verwende ``==``, wenn du "
"fragst, ob sie gleich sind. Verwende ``=``, wenn du einen Wert zuweisen "
"willst."

#: ../../source/chapters/10_if_statements/if_statements.rst:116
msgid ""
"The two most common mistakes in mixing the ``=`` and ``==`` operators are "
"demonstrated below:"
msgstr ""
"Die beiden häufigsten Fehler beim Vertauschen der Operatoren ``=`` und "
"``==``, werden unten gezeigt:"

#: ../../source/chapters/10_if_statements/if_statements.rst:119
msgid ""
"# This is wrong\n"
"a == 1\n"
"\n"
"# This is also wrong\n"
"if a = 1:\n"
"    print(\"A is one\")"
msgstr ""
"# This is wrong\n"
"a == 1\n"
"\n"
"# This is also wrong\n"
"if a = 1:\n"
"    print(\"A is one\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:129
msgid ""
"Stop! Please take a moment to go back and carefully study the last two code "
"examples. Save time later by making sure you understand when to use ``=`` "
"and ``==``. Don't guess."
msgstr ""
"Halt! Nimm dir noch etwas Zeit, gehe zurück und sieh dir sorgfältig die "
"letzten beiden Programmbeispiele an. Spare später Zeit dadurch, dass du "
"sicher verstehst, wann du ``=`` und wann ``==`` verwenden musst. Rate nicht "
"einfach."

#: ../../source/chapters/10_if_statements/if_statements.rst:134
msgid "Indentation"
msgstr "Einrückung"

#: ../../source/chapters/10_if_statements/if_statements.rst:136
msgid ""
"Indentation matters. Each line under the ``if`` statement that is indented "
"will only be executed ``if`` the statement is ``True``:"
msgstr ""
"Die Einrückung ist entscheidend. Jede Zeile unter der ``if``-Anweisung, die "
"eingerückt ist, wird nur ausgeführt, wenn die Bedingung wahr ist (``True`` "
"ergibt):"

#: ../../source/chapters/10_if_statements/if_statements.rst:139
msgid ""
"if a == 1:\n"
"    print(\"If a is one, this will print.\")\n"
"    print(\"So will this.\")\n"
"    print(\"And this.\")\n"
"\n"
"print(\"This will always print because it is not indented.\")"
msgstr ""
"if a == 1:\n"
"    print(\"If a is one, this will print.\")\n"
"    print(\"So will this.\")\n"
"    print(\"And this.\")\n"
"\n"
"print(\"This will always print because it is not indented.\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:149
msgid "Indentation must be the same. This code doesn't work."
msgstr ""
"Die Einrückung muss gleich tief sein (gleiche Anzahl von Leerzeichen). "
"Dieser Code funktioniert nicht."

#: ../../source/chapters/10_if_statements/if_statements.rst:151
msgid ""
"if a == 1:\n"
"  print(\"Indented two spaces.\")\n"
"    print(\"Indented four. This will generate an error.\")\n"
"   print(\"The computer will want you to make up your mind.\")"
msgstr ""
"if a == 1:\n"
"  print(\"Indented two spaces.\")\n"
"    print(\"Indented four. This will generate an error.\")\n"
"   print(\"The computer will want you to make up your mind.\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:159
msgid ""
"Once an ``if`` statement has been finished, it is not possible to re-indent "
"to go back to it. The test has to be performed again."
msgstr ""
"Sobald eine bedingte Anweisung beendet wurde, kann man nicht wieder den Text "
"einrücken, um zur bedingten Anweisung zurückzukehren. Die Überprüfung muss "
"erneut ausgeführt werden."

#: ../../source/chapters/10_if_statements/if_statements.rst:162
msgid ""
"if a == 1:\n"
"    print(\"If a is one, this will print.\")\n"
"    print(\"So will this.\")\n"
"\n"
"print(\"This will always print because it is not indented.\")\n"
"    print(\"This will generate an error. Why it is indented?\")"
msgstr ""
"if a == 1:\n"
"    print(\"If a is one, this will print.\")\n"
"    print(\"So will this.\")\n"
"\n"
"print(\"This will always print because it is not indented.\")\n"
"    print(\"This will generate an error. Why it is indented?\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:173
msgid "Using And/Or"
msgstr "Verwendung von und/oder"

#: ../../source/chapters/10_if_statements/if_statements.rst:175
msgid ""
"An ``if`` statement can check multiple conditions by chaining together "
"comparisons with ``and`` and ``or``. These are also considered to be "
"*operators* just like ``+`` or ``-`` are."
msgstr ""
"Die bedingte Anweisung kann mehrere Bedingungen durch Verbinden der "
"Vergleiche mit ``and`` (deutsch und) und ``or`` (deutsch oder) überprüfen. "
"Diese werden also als *Operatoren*, wie ``+`` oder ``-``, betrachtet. "

#: ../../source/chapters/10_if_statements/if_statements.rst:180
msgid "Example ``if`` statements, using \"and\" and \"or\""
msgstr "Beispiel bedingte Anweisungen: Verwendung von ``and`` und ``or``"

#: ../../source/chapters/10_if_statements/if_statements.rst:180
msgid ""
"# And\n"
"if a < b and a < c:\n"
"    print(\"a is less than b and c\")\n"
"\n"
"# Non-exclusive or\n"
"if a < b or a < c:\n"
"    print(\"a is less than either b or c (or both)\")"
msgstr ""
"# And\n"
"if a < b and a < c:\n"
"    print(\"a is less than b and c\")\n"
"\n"
"# Non-exclusive or\n"
"if a < b or a < c:\n"
"    print(\"a is less than either b or c (or both)\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:192
msgid "Repeat yourself please."
msgstr "Wiederhole bitte selbst."

#: ../../source/chapters/10_if_statements/if_statements.rst:194
msgid ""
"A common mistake is to omit a variable when checking it against multiple "
"conditions. The code below does not work because the computer does not know "
"what to check against the variable ``c``. It will not assume to check it "
"against ``a``."
msgstr ""
"Ein häufiger Fehler ist, eine Variable auszulassen, wenn sie gegen mehrere "
"Werte verglichen werden soll. Der Code unten wird nicht funktionieren, da "
"der Rechner nicht weiß, womit er die Variable ``c`` vergleichen soll. Er "
"wird nicht annehmen, dass er sie mit ``a`` vergleichen soll."

#: ../../source/chapters/10_if_statements/if_statements.rst:199
msgid ""
"# This is not correct\n"
"if a < b or < c:\n"
"    print(\"a is less than b and c\")"
msgstr ""
"# This is not correct\n"
"if a < b or < c:\n"
"    print(\"a is less than b and c\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:207
msgid "Boolean Variables"
msgstr "Boolesche Variablen"

#: ../../source/chapters/10_if_statements/if_statements.rst:209
msgid ""
"Python supports Boolean variables. What are Boolean variables? Boolean "
"variables can store either a ``True`` or a value of ``False``. `Boolean "
"algebra`_ was developed by `George Boole`_ back in 1854. If only he knew how "
"important his work would become as the basis for modern computer logic!"
msgstr ""
"Python unterstützt Boolesche Variablen. Was sind Boolesche Variablen? "
"Boolesche Variablen können entweder den Wert ``True`` (deutsch wahr) oder "
"``False`` (deutsch falsch) speichern. Die `Boolean algebra`_ wurde von "
"`George Boole`_ schon 1854 entwickelt. Wenn er gewusst hätte, dass seine "
"Arbeit die Grundlage der modernen Rechnerlogik werden würde."

#: ../../source/chapters/10_if_statements/if_statements.rst:217
msgid ""
"An ``if`` statement needs an expression to evaluate to ``True`` or "
"``False``. What may seem odd is that it does not actually need to do any "
"comparisons if a variable already evaluates to ``True`` or ``False``."
msgstr ""
"Eine bedingte Anweisung benötigt einen Ausdruck, der zu ``True`` oder "
"``False`` ausgewertet wird. Was etwas merkwürdig erscheinen kann, ist, dass "
"wir keine Vergleiche anstellen müssen, wenn die Variable schon zu ``True`` "
"oder ``False`` ausgewertet wird."

#: ../../source/chapters/10_if_statements/if_statements.rst:221
msgid "If statements and Boolean data types"
msgstr "Bedingte Anweisungen und Boolesche Datentypen"

#: ../../source/chapters/10_if_statements/if_statements.rst:221
msgid ""
"# Boolean data type. This is legal!\n"
"a = True\n"
"if a:\n"
"    print(\"a is true\")"
msgstr ""
"# Boolean data type. This is legal!\n"
"a = True\n"
"if a:\n"
"    print(\"a is true\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:230
msgid ""
"Back when I was in school it was popular to say some false statement. Wait "
"three seconds, then shout \"NOT!\" Well, even your computer thinks that is "
"lame. If you are going to do that, you have to start with the not operator. "
"The following code uses the not to flip the value of a between true and "
"false."
msgstr ""
"Als ich noch zur Schule ging, war es in Mode etwas Falsches zu sagen, drei "
"Sekunden zu warten und dann \"NICHT!\" zu rufen. Nun gut, selbst dein "
"Rechner wird das für einen lahmen Witz halten. Wenn du das machen willst, "
"musst du mit den ``not``-Operator anfangen. Der folgende Code verwendet den "
"``not``-Operator, um den Wert zwischen wahr und falsch zu invertieren."

#: ../../source/chapters/10_if_statements/if_statements.rst:235
msgid ""
"Because not is an operator and not a function, parentheses aren't necessary."
msgstr ""
"Da ``not`` ein Operator und keine Funktion ist, sind keine Klammern nötig."

#: ../../source/chapters/10_if_statements/if_statements.rst:238
msgid "The not operator example 2"
msgstr "Der ``not``-Operator - Beispiel 2"

#: ../../source/chapters/10_if_statements/if_statements.rst:238
msgid ""
"# How to use the not function\n"
"if not a:\n"
"    print(\"a is false\")"
msgstr ""
"# How to use the not function\n"
"if not a:\n"
"    print(\"a is false\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:246
msgid "It is also possible to use Boolean variables with and and or operators."
msgstr ""
"Es ist ebenfalls möglich, Boolesche Variablen mit den ``and``- und ``or``-"
"Operatoren zu verwenden."

#: ../../source/chapters/10_if_statements/if_statements.rst:248
msgid "Using \"and\" with Boolean variables"
msgstr "``and`` mit Booleschen Variablen verwenden"

#: ../../source/chapters/10_if_statements/if_statements.rst:248
msgid ""
"a = True\n"
"b = False\n"
"\n"
"if a and b:\n"
"    print(\"a and b are both true\")"
msgstr ""
"a = True\n"
"b = False\n"
"\n"
"if a and b:\n"
"    print(\"a and b are both true\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:258
msgid "Who knew True/False could be hard?"
msgstr "Wer hätte gedacht, dass wahr/falsch so schwierig sein kann?"

#: ../../source/chapters/10_if_statements/if_statements.rst:260
msgid ""
"It is also possible to assign a variable to the result of a comparison. In "
"the code below, the variables ``a`` and ``b`` are compared. If they are "
"equal, ``c`` will be ``True``, otherwise ``c`` will be ``False``."
msgstr ""
"Es ist ebenfalls möglich das Ergebnis eines Vergleichs an eine Variable "
"zuzuweisen. Im Code unten werden die Variablen ``a`` und ``b`` verglichen. "
"Wenn sie gleich sind, wird ``c`` ``True`` andernfalls ``False`` zugewiesen."

#: ../../source/chapters/10_if_statements/if_statements.rst:264
msgid "Assigning values to Boolean data types"
msgstr "Werte an Boolesche Datentypen zuweisen"

#: ../../source/chapters/10_if_statements/if_statements.rst:264
msgid ""
"a = 3\n"
"b = 3\n"
"\n"
"# This next line is strange-looking, but legal.\n"
"# c will be true or false, depending if\n"
"# a and b are equal.\n"
"c = a == b\n"
"\n"
"# Prints value of c, in this case True\n"
"print(c)"
msgstr ""
"a = 3\n"
"b = 3\n"
"\n"
"# This next line is strange-looking, but legal.\n"
"# c will be true or false, depending if\n"
"# a and b are equal.\n"
"c = a == b\n"
"\n"
"# Prints value of c, in this case True\n"
"print(c)"

#: ../../source/chapters/10_if_statements/if_statements.rst:279
msgid "Zero means False. Everything else is True."
msgstr "Null bedeutet ``False``. Alles andere ist ``True``."

#: ../../source/chapters/10_if_statements/if_statements.rst:281
msgid ""
"It is possible to create an ``if`` statement with a condition that does not "
"evaluate to ``True`` or ``False``. This is not usually desired, but it is "
"important to understand how the computer handles these values when searching "
"for problems. The statement below is legal and will cause the text to be "
"printed out because the values in the ``if`` statement are non-zero:"
msgstr ""
"Es ist möglich eine ``if``-Anweisung mit einer Bedingung zu schreiben, die "
"nicht zu ``True`` oder ``False`` ausgewertet wird. Das ist üblicherweise "
"nicht erwünscht, aber es ist wichtig für die Fehlersuche zu verstehen, wie "
"der Rechner diese Werte handhabt. Die Anweisungen unten sind erlaubt und "
"wird den Text ausgeben, weil die Werte in der ``if``-Anweisung ungleich Null "
"sind."

#: ../../source/chapters/10_if_statements/if_statements.rst:287
msgid ""
"if 1:\n"
"    print(\"1\")\n"
"if \"A\":\n"
"    print(\"A\")"
msgstr ""
"if 1:\n"
"    print(\"1\")\n"
"if \"A\":\n"
"    print(\"A\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:295
msgid ""
"The code below will not print out anything because the value in the ``if`` "
"statement is zero which is treated as ``False``. Any value other than zero "
"is considered ``True``."
msgstr ""
"Der Code unten wird nichts ausgeben, weil der Wert in der ``if``-Anweisung "
"Null ist und damit als ``False`` behandelt wird. Jeder von Null "
"verschiedenen Wert wird als ``True`` betrachtet."

#: ../../source/chapters/10_if_statements/if_statements.rst:299
msgid ""
"if 0:\n"
"    print(\"Zero\")"
msgstr ""
"if 0:\n"
"    print(\"Zero\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:308
msgid "The ``input`` Function"
msgstr "Die ``input``-Funktion"

#: ../../source/chapters/10_if_statements/if_statements.rst:310
msgid ""
"Rather than hard-coding values into our program, we can use the ``input`` "
"function to ask the user to type something in. The ``input`` function is "
"reasonably simple to use:"
msgstr ""
"Statt die Werte fest in unser Programm zu schreiben, können wir die "
"``input``-Funktion verwenden, um den Benutzer aufzuforderen etwas "
"einzugeben. Die ``input``-Funktion ist einigermaßen einfach zu verwenden:"

#: ../../source/chapters/10_if_statements/if_statements.rst:314
msgid ""
"temperature = input(\"What is the temperature in Fahrenheit? \")\n"
"print(\"You said the temperature was \" + temperature + \".\")"
msgstr ""
"temperature = input(\"What is the temperature in Fahrenheit? \")\n"
"print(\"You said the temperature was \" + temperature + \".\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:320
msgid ""
"As a parameter to ``input``, just give it text to use as a prompt. Whatever "
"the user types in, is stored in the variable on the left."
msgstr ""
"Gib als Argument beim Aufruf von ``input`` einfach den Text der "
"Eingabeaufforderung an. Was immer der Benutzer eingibt, wird in der "
"Variablen auf der linken Seite der Zuweisung gespeichert."

#: ../../source/chapters/10_if_statements/if_statements.rst:323
msgid ""
"Note that there is a question mark and a space at the end of that string. If "
"you didn't have this, what the user types in will run right up next to the "
"prompt. That looks terrible. The user is tempted to type a space as the "
"first part of their input, which complicates things for us later."
msgstr ""
"Beachte, dass ein Fragezeichen und ein Leerzeichen am Ende der Zeichenkette "
"steht. Wenn du das weg lässt, wird der Text, den der Benutzer eingibt, "
"direkt an die Eingabeaufforderung angehängt. Das sieht aber schrecklich aus. "
"Der Benutzer wird verführt, ein Leerzeichen als Erstes einzugeben. Das wird "
"uns aber die Sache später erschweren."

#: ../../source/chapters/10_if_statements/if_statements.rst:328
msgid ""
"There's one more thing we have to learn. We can't take what the user types "
"in and compare it to a number. This program:"
msgstr ""
"Es gibt noch etwas zu lernen. Wir können die Eingabe des Benutzers nicht "
"direkt mit einer Zahl vergleichen. Dieses Programm:"

#: ../../source/chapters/10_if_statements/if_statements.rst:331
msgid ""
"temperature = input(\"What is the temperature in Fahrenheit? \")\n"
"if temperature > 90:\n"
"    print(\"It is hot outside.\")"
msgstr ""
"temperature = input(\"What is the temperature in Fahrenheit? \")\n"
"if temperature > 90:\n"
"    print(\"It is hot outside.\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:338
msgid "...will fail with the error:"
msgstr "... wird mit einem Fehler enden:"

#: ../../source/chapters/10_if_statements/if_statements.rst:340
msgid "TypeError: '>' not supported between instances of 'str' and 'int'"
msgstr "TypeError: '>' not supported between instances of 'str' and 'int'"

#: ../../source/chapters/10_if_statements/if_statements.rst:344
msgid ""
"Whatever the user types in is stored as text. We also call text a \"string\" "
"because to the computer it is just a string of characters. This is different "
"than a number, and the computer does not know how to compare them."
msgstr ""
"Was immer der Benutzer eingibt wird als Text gespeichert. Wir nennen einen "
"Text auch Zeichenkette, weil es für den Rechner nur eine Kette von Zeichen "
"ist. Eine Zeichenkette (englisch *string*) ist etwas anderes als eine Zahl "
"und der Rechner weiß nicht, wie er sie vergleichen soll."

#: ../../source/chapters/10_if_statements/if_statements.rst:348
msgid ""
"Therefore, we need to convert the input into a number. We can do with with "
"either the ``int`` for integers, or the ``float`` function for numbers with "
"a decimal."
msgstr ""
"Wir müssen deshalb die Eingabe in eine Zahl umwandeln. Wir können das "
"entweder mit der ``int``-Funktion für ganze Zahlen (englisch *integers*) "
"oder der ``float``-Funktion für Gleitkommazahlen (englisch *floating point "
"numbers*, kurz *floats*) erreichen."

#: ../../source/chapters/10_if_statements/if_statements.rst:352
msgid "For example:"
msgstr "Zum Beispiel:"

#: ../../source/chapters/10_if_statements/if_statements.rst:354
msgid ""
"# Get input from the user\n"
"temperature = input(\"What is the temperature in Fahrenheit? \")\n"
"\n"
"# Convert the input to an integer\n"
"temperature = int(temperature)\n"
"\n"
"# Do our comparison\n"
"if temperature > 90:\n"
"    print(\"It is hot outside.\")"
msgstr ""
"# Get input from the user\n"
"temperature = input(\"What is the temperature in Fahrenheit? \")\n"
"\n"
"# Convert the input to an integer\n"
"temperature = int(temperature)\n"
"\n"
"# Do our comparison\n"
"if temperature > 90:\n"
"    print(\"It is hot outside.\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:367
msgid "You can also do it in one step by nesting the functions:"
msgstr "Du kannst die Funktionen auch in einem Schritt verschachteln:"

#: ../../source/chapters/10_if_statements/if_statements.rst:369
msgid ""
"# Get input from the user\n"
"temperature = int(input(\"What is the temperature in Fahrenheit? \"))\n"
"\n"
"# Do our comparison\n"
"if temperature > 90:\n"
"    print(\"It is hot outside.\")"
msgstr ""
"# Get input from the user\n"
"temperature = int(input(\"What is the temperature in Fahrenheit? \"))\n"
"\n"
"# Do our comparison\n"
"if temperature > 90:\n"
"    print(\"It is hot outside.\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:381
msgid "Else and Else If"
msgstr "Andernfalls und andernfalls wenn"

#: ../../source/chapters/10_if_statements/if_statements.rst:383
msgid ""
"Below is code that will get the temperature from the user and print if it is "
"hot."
msgstr ""
"Unten ist der Code, der die Temperatur vom Benutzer abfragt und ausgibt, ob "
"es heiß ist."

#: ../../source/chapters/10_if_statements/if_statements.rst:385
msgid ""
"temperature = int(input(\"What is the temperature in Fahrenheit? \"))\n"
"if temperature > 90:\n"
"    print(\"It is hot outside\")\n"
"print(\"Done\")"
msgstr ""
"temperature = int(input(\"What is the temperature in Fahrenheit? \"))\n"
"if temperature > 90:\n"
"    print(\"It is hot outside\")\n"
"print(\"Done\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:393
msgid ""
"If the programmer wants code to be executed if it is not hot, she can use "
"the else statement. Notice how the else is lined up with the ``i`` in the "
"``if`` statement, and how it is followed by a colon just like the ``if`` "
"statement."
msgstr ""
"Wenn die Programmiererin Code ausführen möchten, wenn es nicht heiß ist, "
"kann sie die ``else``-Anweisung verwenden. Beachte wie das ``else`` genau so "
"weit eingerückt ist wie das ``if`` und von einem Doppelpunkt gefolgt wird, "
"wie bei der ``if``-Anweisung."

#: ../../source/chapters/10_if_statements/if_statements.rst:397
msgid ""
"In the case of an if...else statement, one block of code will always be "
"executed. The first block will be executed ``if`` the statement evaluates to "
"``True``, the second block if it evaluates to False."
msgstr ""
"Im Fall der ``if``...``else``-Anweisung (besser zweiseitige Auswahl), wird "
"immer ein Block von Anweisungen ausgeführt. Der erste Block wird ausgeführt, "
"wenn die Bedingung zu ``True`` ausgewertet wird. Der zweite Block wird "
"ausgeführt, wenn sie zu ``False`` ausgewertet wird."

#: ../../source/chapters/10_if_statements/if_statements.rst:401
msgid "Example if/else statement"
msgstr "Beispiel zweiseitige Auswahl"

#: ../../source/chapters/10_if_statements/if_statements.rst:401
msgid ""
"temperature = int(input(\"What is the temperature in Fahrenheit? \"))\n"
"if temperature > 90:\n"
"    print(\"It is hot outside\")\n"
"else:\n"
"    print(\"It is not hot outside\")\n"
"print(\"Done\")"
msgstr ""
"temperature = int(input(\"What is the temperature in Fahrenheit? \"))\n"
"if temperature > 90:\n"
"    print(\"It is hot outside\")\n"
"else:\n"
"    print(\"It is not hot outside\")\n"
"print(\"Done\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:412
msgid ""
"It is possible to chain several ``if`` statements together using the else..."
"if statement. Python abbreviates this as ``elif``."
msgstr ""
"Man kann mehrere bedingte Anweisungen mit einer ``else``...``if``-Anweisung "
"verketten. Python kürzt dies mit ``elif`` ab."

#: ../../source/chapters/10_if_statements/if_statements.rst:415
msgid "Example if/elif/else statement"
msgstr "Beispiel verschachtelte Auswahl"

#: ../../source/chapters/10_if_statements/if_statements.rst:415
msgid ""
"temperature = int(input(\"What is the temperature in Fahrenheit? \"))\n"
"if temperature > 90:\n"
"    print(\"It is hot outside\")\n"
"elif temperature < 30:\n"
"    print(\"It is cold outside\")\n"
"else:\n"
"    print(\"It is not hot outside\")\n"
"print(\"Done\")"
msgstr ""
"temperature = int(input(\"What is the temperature in Fahrenheit? \"))\n"
"if temperature > 90:\n"
"    print(\"It is hot outside\")\n"
"elif temperature < 30:\n"
"    print(\"It is cold outside\")\n"
"else:\n"
"    print(\"It is not hot outside\")\n"
"print(\"Done\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:428
msgid ""
"In the code below, the program will output \"It is hot outside\" even if the "
"user types in 120 degrees. Why? How can the code be fixed?"
msgstr ""
"Der Code unten wird \"It is hot outside\" ausgeben, wenn der Benutzer eine "
"Temperatur von 120 Grad Fahrenheit eingibt. Warum? Wie kann das Programm "
"repariert werden?"

#: ../../source/chapters/10_if_statements/if_statements.rst:431
msgid "If you can't figure it out, see the video."
msgstr "Wenn du nicht drauf kommst, sieh dir das Video an."

#: ../../source/chapters/10_if_statements/if_statements.rst:433
msgid "Example of improper ordering if/elif/else"
msgstr "Beispiel verschachtelte Auswahl mit falscher Anordnung"

#: ../../source/chapters/10_if_statements/if_statements.rst:433
msgid ""
"temperature = int(input(\"What is the temperature in Fahrenheit? \"))\n"
"if temperature > 90:\n"
"    print(\"It is hot outside\")\n"
"elif temperature > 110:\n"
"    print(\"Oh man, you could fry eggs on the pavement!\")\n"
"elif temperature < 30:\n"
"    print(\"It is cold outside\")\n"
"else:\n"
"    print(\"It is ok outside\")\n"
"print(\"Done\")"
msgstr ""
"temperature = int(input(\"What is the temperature in Fahrenheit? \"))\n"
"if temperature > 90:\n"
"    print(\"It is hot outside\")\n"
"elif temperature > 110:\n"
"    print(\"Oh man, you could fry eggs on the pavement!\")\n"
"elif temperature < 30:\n"
"    print(\"It is cold outside\")\n"
"else:\n"
"    print(\"It is ok outside\")\n"
"print(\"Done\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:451
msgid "Text Comparisons"
msgstr "Textvergleiche"

#: ../../source/chapters/10_if_statements/if_statements.rst:453
msgid "It is possible to use an if statement to check text."
msgstr ""
"Es ist möglich eine bedingte Anweisung zum Überprüfen von Text zu verwenden."

#: ../../source/chapters/10_if_statements/if_statements.rst:455
msgid "Case sensitive text comparison"
msgstr "Groß-/Kleinschreibungsabhängiger Textvergleich"

#: ../../source/chapters/10_if_statements/if_statements.rst:455
msgid ""
"user_name = input(\"What is your name? \")\n"
"if user_name == \"Paul\":\n"
"    print(\"You have a nice name.\")\n"
"else:\n"
"    print(\"Your name is ok.\")"
msgstr ""
"user_name = input(\"What is your name? \")\n"
"if user_name == \"Paul\":\n"
"    print(\"You have a nice name.\")\n"
"else:\n"
"    print(\"Your name is ok.\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:465
msgid ""
"The prior example will only match if the user enters \"Paul\". It will not "
"work if the user enters \"paul\" or \"PAUL\"."
msgstr ""
"Nur wenn der Benutzer im Beispiel oben \"Paul\" eingibt, wird es passen. Es "
"wird nicht funktionieren, wenn der Benutzer \"paul\" oder \"PAUL\" eingibt."

#: ../../source/chapters/10_if_statements/if_statements.rst:467
msgid ""
"A common mistake is to forget the quotes around the string being compared. "
"In the example below, the computer will think that Paul is a variable that "
"stores a value. It will flag an error because it has no idea what is stored "
"in the variable Paul."
msgstr ""
"Ein üblicher Fehler ist, die Anführungszeichen um die Zeichenkette, mit der "
"verglichen werden soll, zu vergessen. Im Beispiel unten wird der Rechner "
"annehmen, dass Paul eine Variable ist, die einen Wert speichert. Er wird "
"einen Fehler anzeigen, weil er keine Ahnung hat, was in der Variablen Paul "
"gespeichert ist."

#: ../../source/chapters/10_if_statements/if_statements.rst:469
msgid "Incorrect comparison"
msgstr "Fehlerhafter Vergleich"

#: ../../source/chapters/10_if_statements/if_statements.rst:469
msgid ""
"user_name = input(\"What is your name? \")\n"
"if user_name == Paul: # This does not work because quotes are missing\n"
"    print(\"You have a nice name.\")\n"
"else:\n"
"    print(\"Your name is ok.\")"
msgstr ""
"user_name = input(\"What is your name? \")\n"
"if user_name == Paul: # This does not work because quotes are missing\n"
"    print(\"You have a nice name.\")\n"
"else:\n"
"    print(\"Your name is ok.\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:482
msgid "Multiple Text Possibilities"
msgstr "Mehrfache Textvergleiche"

#: ../../source/chapters/10_if_statements/if_statements.rst:484
msgid ""
"When comparing a variable to multiple possible strings of text, it is "
"important to remember that the comparison must include the variable. For "
"example:"
msgstr ""
"Wenn man eine Variable mit mehreren möglichen Zeichenketten vergleicht, ist "
"es wichtig daran zu denken, dass jeder Vergleich die Variable beinhalten "
"muss. Zum Beispiel:"

#: ../../source/chapters/10_if_statements/if_statements.rst:487
msgid ""
"# This does not work! It will always be true\n"
"if user_name == \"Paul\" or \"Mary\":\n"
"Instead, the code should read:\n"
"\n"
"# This does work\n"
"if user_name == \"Paul\" or user_name == \"Mary\":"
msgstr ""
"# This does not work! It will always be true\n"
"if user_name == \"Paul\" or \"Mary\":\n"
"Instead, the code should read:\n"
"\n"
"# This does work\n"
"if user_name == \"Paul\" or user_name == \"Mary\":"

#: ../../source/chapters/10_if_statements/if_statements.rst:497
msgid ""
"This is because any value other than zero, the computer assumes to mean "
"``True``. So to the computer \"Mary\" is the same thing as ``True`` and so "
"it will run the code in the ``if`` statement."
msgstr ""
"Dies ist so, weil für jeden von Null verschiedenen Wert der Rechner annimmt, "
"dass ``True`` gemeint ist. Für den Rechner bedeutet in diesem Fall \"Mary\" "
"also ``True`` und er führt den Code in der ``if``-Anweisung aus."

#: ../../source/chapters/10_if_statements/if_statements.rst:502
msgid "Case Insensitive Comparisons"
msgstr "Groß-/Kleinschreibungsunabhängige Vergleiche"

#: ../../source/chapters/10_if_statements/if_statements.rst:504
msgid ""
"If the program needs to match regardless as to the case of the text entered, "
"the easiest way to do that is to convert everything to lower case. This can "
"be done with the lower command."
msgstr ""
"Wenn der Vergleich unabhängig von Groß-/Kleinschreibung passen soll, ist es "
"am einfachsten alles in Kleinbuchstaben umzuwandeln. Dies macht die "
"``lower``-Funktion."

#: ../../source/chapters/10_if_statements/if_statements.rst:506
msgid "Learn to be insensitive."
msgstr "Lerne unabhängig zu sein."

#: ../../source/chapters/10_if_statements/if_statements.rst:508
msgid ""
"The example below will take whatever the user enters, convert it to lower "
"case, and then do the comparison. Important: Don't compare it against a "
"string that has uppercase. If the user input is converted to lowercase, then "
"compared against uppercase letters, there is no way a match can occur."
msgstr ""
"Das Beispiel unten wird den Text, den der Benutzer eingibt, in "
"Kleinbuchstaben umwandeln und dann vergleichen. Wichtig: Vergleiche ihn "
"nicht mit einer Zeichenkette, die Großbuchstaben enthält. Wenn die Eingabe "
"in Kleinbuchstaben umgewandelt wurde, wird sie niemals auf eine Zeichenkette "
"mit Großbuchstaben passen."

#: ../../source/chapters/10_if_statements/if_statements.rst:510
msgid "Case-insensitive text comparison"
msgstr "Groß-/Kleinschreibungsunabhängige Textvergleiche"

#: ../../source/chapters/10_if_statements/if_statements.rst:510
msgid ""
"user_name = input(\"What is your name? \")\n"
"if user_name.lower() == \"paul\":\n"
"    print(\"You have a nice name.\")\n"
"else:\n"
"    print(\"Your name is ok.\")"
msgstr ""
"user_name = input(\"What is your name? \")\n"
"if user_name.lower() == \"paul\":\n"
"    print(\"You have a nice name.\")\n"
"else:\n"
"    print(\"Your name is ok.\")"

#: ../../source/chapters/10_if_statements/if_statements.rst:521
msgid "Example if Statements"
msgstr "Beispiel bedingte Anweisungen"

#: ../../source/chapters/10_if_statements/if_statements.rst:523
msgid ""
"The next set of example code below runs through all the concepts talked "
"about earlier. The on-line video traces through each line of code and "
"explains how it works"
msgstr ""
"Das folgende Beispielprogramm führt alle oben dargestellten Konzepte aus. "
"Das Video online geht durch alle Codezeilen und erklärt, wie sie "
"funktionieren."

#: ../../source/chapters/10_if_statements/if_statements.rst:527
msgid ""
"# Sample Python/Pygame Programs\n"
"# Simpson College Computer Science\n"
"# http://programarcadegames.com/\n"
"# http://simpson.edu/computer-science/\n"
"\n"
"# Explanation video: http://youtu.be/pDpNSck2aXQ\n"
"\n"
"# Variables used in the example if statements\n"
"a = 4\n"
"b = 5\n"
"c = 6\n"
"\n"
"# Basic comparisons\n"
"if a < b:\n"
"    print(\"a is less than b\")\n"
"\n"
"if a > b:\n"
"    print(\"a is greater than than b\")\n"
"\n"
"if a <= b:\n"
"    print(\"a is less than or equal to b\")\n"
"\n"
"if a >= b:\n"
"    print(\"a is greater than or equal to b\")\n"
"\n"
"# NOTE: It is very easy to mix when to use == and =.\n"
"# Use == if you are asking if they are equal, use =\n"
"# if you are assigning a value.\n"
"if a == b:\n"
"    print(\"a is equal to b\")\n"
"\n"
"# Not equal\n"
"if a != b:\n"
"    print(\"a and b are not equal\")\n"
"\n"
"# And\n"
"if a < b and a < c:\n"
"    print(\"a is less than b and c\")\n"
"\n"
"# Non-exclusive or\n"
"if a < b or a < c:\n"
"    print(\"a is less than either a or b (or both)\")\n"
"\n"
"\n"
"# Boolean data type. This is legal!\n"
"a = True\n"
"if a:\n"
"    print(\"a is true\")\n"
"\n"
"if not a:\n"
"    print(\"a is false\")\n"
"\n"
"a = True\n"
"b = False\n"
"\n"
"if a and b:\n"
"    print(\"a and b are both true\")\n"
"\n"
"a = 3\n"
"b = 3\n"
"c = a == b\n"
"print(c)\n"
"\n"
"# These are also legal and will trigger as being true because\n"
"# the values are not zero:\n"
"if 1:\n"
"    print(\"1\")\n"
"if \"A\":\n"
"    print(\"A\")\n"
"\n"
"# This will not trigger as true because it is zero.\n"
"if 0:\n"
"    print(\"Zero\")\n"
"\n"
"# Comparing variables to multiple values.\n"
"# The first if statement appears to work, but it will always\n"
"# trigger as true even if the variable a is not equal to b.\n"
"# This is because \"b\" by itself is considered true.\n"
"a = \"c\"\n"
"if a == \"B\" or \"b\":\n"
"    print(\"a is equal to b. Maybe.\")\n"
"\n"
"# This is the proper way to do the if statement.\n"
"if a == \"B\" or a == \"b\":\n"
"    print(\"a is equal to b.\")\n"
"\n"
"# Example 1: If statement\n"
"temperature = int(input(\"What is the temperature in Fahrenheit? \"))\n"
"if temperature > 90:\n"
"    print(\"It is hot outside\")\n"
"print(\"Done\")\n"
"\n"
"# Example 2: Else statement\n"
"temperature = int(input(\"What is the temperature in Fahrenheit? \"))\n"
"if temperature > 90:\n"
"    print(\"It is hot outside\")\n"
"else:\n"
"    print(\"It is not hot outside\")\n"
"print(\"Done\")\n"
"\n"
"# Example 3: Else if statement\n"
"temperature = int(input(\"What is the temperature in Fahrenheit? \"))\n"
"if temperature > 90:\n"
"    print(\"It is hot outside\")\n"
"elif temperature < 30:\n"
"    print(\"It is cold outside\")\n"
"else:\n"
"    print(\"It is not hot outside\")\n"
"print(\"Done\")\n"
"\n"
"# Example 4: Ordering of statements\n"
"# Something with this is wrong. What?\n"
"temperature = int(input(\"What is the temperature in Fahrenheit? \"))\n"
"if temperature > 90:\n"
"    print(\"It is hot outside\")\n"
"elif temperature > 110:\n"
"    print(\"Oh man, you could fry eggs on the pavement!\")\n"
"elif temperature < 30:\n"
"    print(\"It is cold outside\")\n"
"else:\n"
"    print(\"It is ok outside\")\n"
"print(\"Done\")\n"
"\n"
"# Comparisons using string/text\n"
"# The input statement will ask the user for input and put it in user_name.\n"
"user_name = input(\"What is your name? \")\n"
"if user_name == \"Paul\":\n"
"    print(\"You have a nice name.\")\n"
"else:\n"
"    print(\"Your name is ok.\")\n"
msgstr ""
"# Sample Python/Pygame Programs\n"
"# Simpson College Computer Science\n"
"# http://programarcadegames.com/\n"
"# http://simpson.edu/computer-science/\n"
"\n"
"# Explanation video: http://youtu.be/pDpNSck2aXQ\n"
"\n"
"# Variables used in the example if statements\n"
"a = 4\n"
"b = 5\n"
"c = 6\n"
"\n"
"# Basic comparisons\n"
"if a < b:\n"
"    print(\"a is less than b\")\n"
"\n"
"if a > b:\n"
"    print(\"a is greater than than b\")\n"
"\n"
"if a <= b:\n"
"    print(\"a is less than or equal to b\")\n"
"\n"
"if a >= b:\n"
"    print(\"a is greater than or equal to b\")\n"
"\n"
"# NOTE: It is very easy to mix when to use == and =.\n"
"# Use == if you are asking if they are equal, use =\n"
"# if you are assigning a value.\n"
"if a == b:\n"
"    print(\"a is equal to b\")\n"
"\n"
"# Not equal\n"
"if a != b:\n"
"    print(\"a and b are not equal\")\n"
"\n"
"# And\n"
"if a < b and a < c:\n"
"    print(\"a is less than b and c\")\n"
"\n"
"# Non-exclusive or\n"
"if a < b or a < c:\n"
"    print(\"a is less than either a or b (or both)\")\n"
"\n"
"\n"
"# Boolean data type. This is legal!\n"
"a = True\n"
"if a:\n"
"    print(\"a is true\")\n"
"\n"
"if not a:\n"
"    print(\"a is false\")\n"
"\n"
"a = True\n"
"b = False\n"
"\n"
"if a and b:\n"
"    print(\"a and b are both true\")\n"
"\n"
"a = 3\n"
"b = 3\n"
"c = a == b\n"
"print(c)\n"
"\n"
"# These are also legal and will trigger as being true because\n"
"# the values are not zero:\n"
"if 1:\n"
"    print(\"1\")\n"
"if \"A\":\n"
"    print(\"A\")\n"
"\n"
"# This will not trigger as true because it is zero.\n"
"if 0:\n"
"    print(\"Zero\")\n"
"\n"
"# Comparing variables to multiple values.\n"
"# The first if statement appears to work, but it will always\n"
"# trigger as true even if the variable a is not equal to b.\n"
"# This is because \"b\" by itself is considered true.\n"
"a = \"c\"\n"
"if a == \"B\" or \"b\":\n"
"    print(\"a is equal to b. Maybe.\")\n"
"\n"
"# This is the proper way to do the if statement.\n"
"if a == \"B\" or a == \"b\":\n"
"    print(\"a is equal to b.\")\n"
"\n"
"# Example 1: If statement\n"
"temperature = int(input(\"What is the temperature in Fahrenheit? \"))\n"
"if temperature > 90:\n"
"    print(\"It is hot outside\")\n"
"print(\"Done\")\n"
"\n"
"# Example 2: Else statement\n"
"temperature = int(input(\"What is the temperature in Fahrenheit? \"))\n"
"if temperature > 90:\n"
"    print(\"It is hot outside\")\n"
"else:\n"
"    print(\"It is not hot outside\")\n"
"print(\"Done\")\n"
"\n"
"# Example 3: Else if statement\n"
"temperature = int(input(\"What is the temperature in Fahrenheit? \"))\n"
"if temperature > 90:\n"
"    print(\"It is hot outside\")\n"
"elif temperature < 30:\n"
"    print(\"It is cold outside\")\n"
"else:\n"
"    print(\"It is not hot outside\")\n"
"print(\"Done\")\n"
"\n"
"# Example 4: Ordering of statements\n"
"# Something with this is wrong. What?\n"
"temperature = int(input(\"What is the temperature in Fahrenheit? \"))\n"
"if temperature > 90:\n"
"    print(\"It is hot outside\")\n"
"elif temperature > 110:\n"
"    print(\"Oh man, you could fry eggs on the pavement!\")\n"
"elif temperature < 30:\n"
"    print(\"It is cold outside\")\n"
"else:\n"
"    print(\"It is ok outside\")\n"
"print(\"Done\")\n"
"\n"
"# Comparisons using string/text\n"
"# The input statement will ask the user for input and put it in user_name.\n"
"user_name = input(\"What is your name? \")\n"
"if user_name == \"Paul\":\n"
"    print(\"You have a nice name.\")\n"
"else:\n"
"    print(\"Your name is ok.\")\n"

#~ msgid ""
#~ "# This does not work! It will always be true\n"
#~ "if user_name == \"Paul\" or \"Mary\":"
#~ msgstr ""
#~ "# This does not work! It will always be true\n"
#~ "if user_name == \"Paul\" or \"Mary\":"

#~ msgid "Instead, the code should read:"
#~ msgstr "Stattdessen sollte im Code stehen:"

#~ msgid ""
#~ "# This does work\n"
#~ "if user_name == \"Paul\" or user_name == \"Mary\":"
#~ msgstr ""
#~ "# This does work\n"
#~ "if user_name == \"Paul\" or user_name == \"Mary\":"
