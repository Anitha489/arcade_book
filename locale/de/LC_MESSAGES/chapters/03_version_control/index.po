# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Paul Vincent Craven
# This file is distributed under the same license as the Arcade package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Arcade 2020\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-03 12:51-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/chapters/03_version_control/index.rst:4
msgid "Version Control Systems"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:6
msgid ""
"We will use a `version control system` to track your work, and allow the "
"instructor to give feedback. Odds are, this will be the same exact system"
" you'd use in a large company."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:13
msgid "Quick Reference"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:16
msgid "Commit and Upload"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:18
msgid "Do this whenever you are done with a session of programming:"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:20
msgid "Open \"git bash\" on Windows, or \"terminal\" on MacOS."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:21
msgid ""
"Type ``cd mydirectoryname`` where the name of the directory will be the "
"same as the name of your repository on BitBucket. You can usually type in"
" the first few letters and hit <tab> to fill in the rest of the directory"
" name."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:23
msgid "Type ``git add *``"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:24
msgid ""
"Type ``git commit -m \"Work on lab 1\"`` Update the comment between the "
"quotes to whatever you did."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:26
msgid "Type ``git push``"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:28
msgid "If you get an error while pushing, see :ref:`cant-push`"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:31
msgid "Turn In Your Work"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:33
msgid "Go to BitBucket"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:34
msgid "Click on \"Source\""
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:35
msgid "Find the folder with your lab"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:36
msgid "Copy link"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:37
msgid "Go to Scholar for the lab"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:38
msgid "Paste link, and turn in."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:40
msgid "For more commands, see the :ref:`git_command_reference`."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:43
msgid "What is a Distributed Version Control System"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:45
msgid ""
"No serious development should be done without version control. In fact, "
"version control is so important, many developers would argue that almost "
"no development should be done without version control. Even all my notes "
"for class I keep in version control."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:50
msgid "Version control allows developers to:"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:52
msgid "Get any prior version of a project."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:54
msgid ""
"Released version 1.5 of your program, and now it is crashing? Quick! Go "
"back to version 1.4."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:56
msgid "Did the 'new guy' mess up the project? Revert back!"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:58
msgid ""
"Know exactly what changed in the code, when, and by who. See who is "
"actually doing the work. If a mistake gets added in, see when it was "
"added and by whom."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:60
msgid "Easily share code between developers."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:61
msgid "Easily work independently of other developers."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:62
msgid "Recover an accidentally deleted or overwritten file."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:63
msgid "Go back and create a bug-fix release on prior versions of a program."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:64
msgid "Work on multiple computers and keep files in sync."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:66
msgid ""
"Version control saves untold time and headaches. It used to be that "
"version control had enough of a learning curve that some developers "
"refused to use it. Thankfully today's version control tools are so easy "
"to use there's no excuse not to."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:70
msgid ""
"There are two main types of version control. The original version control"
" systems were \"centralized.\" Subversion_ (SVN) is a very popular piece "
"of software that supports this type of version control. The other type is"
" a \"Distributed Version Control Systems\" (DVCS). There are two popular "
"versions of DVCS in use today, Git_ and Mercurial_. Mercurial is "
"sometimes also known as Hg. Get it? Hg is the symbol for Mercury. Either "
"Git or Hg works fine, but for this tutorial we will standardize on Git."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:87
msgid "Installing Git"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:89
msgid ""
"Let's install ``git`` on your computer. If you are using a school "
"computer with ``git`` pre-installed, you can skip this step."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:93
msgid ""
"Click the link below and download and install the 64-bit version of the "
"``git``."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:95
msgid "`Windows Git DVCS <https://git-scm.com/download/win>`_"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:96
msgid "`MacOS Git DVCS <https://git-scm.com/download/mac>`_"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:101
msgid "Forking the Repository"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:104
msgid ""
"You should only have to fork the code **once** during class. If you do it"
" more than once, something is wrong. Stop before you do this and see the "
"instructor. It is a big headache for everyone if you fork more than once."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:108
msgid ""
"We are going to store our programs on-line with a website called "
"BitBucket. BitBucket and a program called SourceTree are owned by a "
"company called Atlassian. They offer enhanced accounts for e-mail "
"addresses ending in ``.edu``. To use BitBucket, create an account "
"https://bitbucket.org/account/signup/"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:113
msgid ""
"Go to this web address which has a template for the labs we'll create in "
"class: https://bitbucket.org/pcraven/arcade-games-work"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:115
msgid ""
"We need to \"fork\" the repository. This will create your own copy of the"
" repository that will be independent of mine. Changes you make to a "
"\"fork\" aren't automatically sent to the original. Fork the repository "
"by clicking on the plus button:"
msgstr ""

msgid ".. image:: chapters\\03_version_control\\bitbucket_plus.png"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:123
msgid "Then select \"Fork\":"
msgstr ""

msgid ".. image:: chapters\\03_version_control\\bitbucket_fork_01.png"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:128
msgid ""
"Next, select a name for your fork. Use your last name and first name. "
"Also, select that your repository is private, so that you don't share "
"your homework answers with the world."
msgstr ""

msgid ".. image:: chapters\\03_version_control\\bitbucket_fork_02.png"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:135
msgid "Now you have your own fork. It exists on the BitBucket server only."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:140
msgid "Share the Repository"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:142
msgid ""
"Give read permission to the instructor ``paul@cravenfamily.com`` for your"
" fork so he can grade your assignments."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:146
msgid ".. image:: chapters\\03_version_control\\invite_1.png"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:147
msgid "Then"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:150
msgid ".. image:: chapters\\03_version_control\\invite_2.png"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:152
msgid ""
"Check the feedback on your homework. If the instructor can't get to your "
"homework, you'll get a zero. You need to correct this and resubmit ASAP."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:159
msgid "Cloning the Repository"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:162
msgid ""
"Every time you start working on a new computer, you'll need to create a "
"clone. (Unless you use a flash drive.)"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:165
msgid ""
"Run the program \"Git Bash\" on Windows. Or, if you are on the mac, go "
"under \"Applications\", find \"Utilities\" and in that run \"Terminal\"."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:170
msgid ".. image:: chapters\\03_version_control\\git_bash.png"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:170
msgid "Git Bash Window"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:172
msgid ""
"Figure out where you want to store your files. You might want to store "
"the files on your laptop, a flash drive, or a networked drive."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:174
msgid ""
"Figure out what directory your \"Bash\" window is in. Do this by typing "
"``pwd``, which is short for \"print working directory\"."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:178
msgid ".. image:: chapters\\03_version_control\\pwd.png"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:179
msgid ""
"You can see what files are in the directory by typing ``ls``, short for "
"\"list files\"."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:181
msgid ""
"You can change directories using the ``cd`` command. You should default "
"to your \"home\" directory, which is a great place to put your files. But"
" if you want them in a different location, change to that location now. "
"There's a lot to the ``cd`` command, but there are a few variations you "
"need to know:"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:187
msgid "``cd`` Change to your \"home\" directory."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:188
msgid ""
"``cd mydir`` Change to ``mydir`` directory. That directory must be in the"
" same directory you are in now. Also, if you don't want to type the full "
"directory name, you can type the first few letters and hit <tab>."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:191
msgid "``cd ..`` Go up one directory."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:194
msgid ""
"We want to copy the repository you created to your computer. We'll call "
"this a \"clone.\" A \"clone\" is a copy we normally try to keep synced "
"up, which is different than a \"fork.\" To clone the repository, hit the "
"\"plus\" and then select \"Clone Repository\""
msgstr ""

msgid ".. image:: chapters\\03_version_control\\bitbucket_clone.png"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:203
msgid ""
"Copy the address that it gives you. It should have **your** name, and "
"**not** my name. If you get this wrong, you'll have to restart everything"
" back at the clone section. (Not the fork section.)"
msgstr ""

msgid ".. image:: chapters\\03_version_control\\get_clone_address.png"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:210
msgid "Paste the command it gives you in your command prompt:"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:213
msgid ".. image:: chapters\\03_version_control\\git_clone.png"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:214
msgid "Then..."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:217
msgid ".. image:: chapters\\03_version_control\\after_clone.png"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:218
msgid "There you go! You now have a directory set up where you can do your work."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:223
msgid "Open Project in Pycharm"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:225
msgid ""
"Go ahead and start PyCharm, then select \"File...Open\" and select that "
"directory."
msgstr ""

msgid ".. image:: chapters\\03_version_control\\open_in_pycharm.png"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:230
msgid ""
"Your project should look like the image below. If this isn't what you "
"have, you might have opened the wrong folder. Hit \"File...Open\" and try"
" again."
msgstr ""

msgid ".. image:: chapters\\03_version_control\\open_in_pycharm2.png"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:236
msgid ""
"If you click the arrow next to the folder name, you can see all the "
"folders in the project folder."
msgstr ""

msgid ".. image:: chapters\\03_version_control\\open_in_pycharm3.png"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:242
msgid ""
"If you move from computer to computer hand have a flash drive, you can "
"reopen your project be just doing \"File...Open\". If you don't have your"
" flash drive, you'll need to re-clone your repository."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:249
msgid "Change a File"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:251
msgid ""
"Let's practice making a quick change to one of our files. Open your "
"project folder, open the lab 1 folder, then open lab one. Type in \"Hi\" "
"or something similar."
msgstr ""

msgid ".. image:: chapters\\03_version_control\\select_lab_file.png"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:257
msgid "Hit Ctrl-S to save."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:262
msgid "Commit Your Code"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:264
msgid "It is time to commit. Wait! You are young and don't want to commit yet?"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:266
msgid ""
"The cool thing with version control, is that every time you commit, you "
"can go back to the code at that point in time. Version control lets you "
"take it all back! It is the best type of commitment ever!"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:270
msgid ""
"First, open Git Bash, and switch to the directory with your project using"
" the ``cd`` command:"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:272
msgid ""
"craven@DESKTOP-RAUFKMA MINGW64 ~\n"
"$ cd arcade-games-work2/"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:277
msgid "Optionally, we can use ``git status`` to see what files have changed:"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:279
msgid ""
"craven@DESKTOP-RAUFKMA MINGW64 ~/arcade-games-work2 (master)\n"
"$ git status\n"
"On branch master\n"
"Your branch is up-to-date with 'origin/master'.\n"
"Changes not staged for commit:\n"
"  (use \"git add <file>...\" to update what will be committed)\n"
"  (use \"git checkout -- <file>...\" to discard changes in working "
"directory)\n"
"\n"
"        modified:   Lab 01 - First Program/lab_01.py\n"
"\n"
"no changes added to commit (use \"git add\" and/or \"git commit -a\")"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:293
msgid ""
"Now, add all the files that have changed. The asterisk (``*``) is a wild "
"card character that means get all changes. Optionally, we could list out "
"each file, but that's a lot of work and we don't want to leave anything "
"behind anyway."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:297
msgid ""
"craven@DESKTOP-RAUFKMA MINGW64 ~/arcade-games-work2 (master)\n"
"$ git add *"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:302
msgid "Commit the changes:"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:304
msgid ""
"craven@DESKTOP-RAUFKMA MINGW64 ~/arcade-games-work2 (master)\n"
"$ git commit -m \"Work on lab 1\"\n"
"[master 45028a5] Work on lab 1\n"
" 1 file changed, 1 insertion(+)"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:311
msgid ""
"You might get an error, if the computer doesn't know who you are yet. If "
"you get this error, it will tell you the commands you need to run. They "
"will look like:"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:314
msgid ""
"git config --global user.email \"put.your.email.here@my.simpson.edu\"\n"
"git config --global user.name \"Jane Smith\""
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:319
msgid ""
"Then you can re-run your commit command. You can use the \"up\" arrow to "
"get commands you typed in previously so you don't need to retype "
"anything."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:325
msgid "Push Your Code"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:327
msgid "And push them to the server:"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:329
msgid ""
"craven@DESKTOP-RAUFKMA MINGW64 ~/arcade-games-work2 (master)\n"
"$ git push\n"
"Counting objects: 4, done.\n"
"Delta compression using up to 8 threads.\n"
"Compressing objects: 100% (2/2), done.\n"
"Writing objects: 100% (4/4), 329 bytes | 0 bytes/s, done.\n"
"Total 4 (delta 1), reused 0 (delta 0)\n"
"To bitbucket.org:pcraven/arcade-games-work2.git\n"
"   519c361..45028a5  master -> master\n"
"\n"
"craven@DESKTOP-RAUFKMA MINGW64 ~/arcade-games-work2 (master)\n"
"$"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:344
msgid ""
"Look to see if the message says that there is an \"error.\" The message "
"will probably look a little different than what you see above, with other"
" objects or threads, but there should not be any errors. If there are "
"errors, skip down to :ref:`cant-push`."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:351
msgid "Turning In Your Programs"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:353
msgid ""
"When it comes time to turn in one of your programs, go back to BitBucket."
" Click on \"source\", find the lab file, copy the URL:"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:357
msgid ".. image:: chapters\\03_version_control\\bitbucket_copy_url.png"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:358
msgid ""
"Now go to Scholar and paste the link into the text field for the lab you "
"are are working on."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:363
msgid "What If You Can't Push?"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:365
msgid ""
"What happens if you can't push to the server? If you get an error like "
"what's below? (See highlighted lines.)"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:368
msgid ""
"  $ git push\n"
"  To bitbucket.org:pcraven/arcade-games-work2.git\n"
"   ! [rejected]        master -> master (fetch first)\n"
"  error: failed to push some refs to 'git@bitbucket.org:pcraven/arcade-"
"games-work2.git'\n"
"  hint: Updates were rejected because the remote contains work that you "
"do\n"
"  hint: not have locally. This is usually caused by another repository "
"pushing\n"
"  hint: to the same ref. You may want to first integrate the remote "
"changes\n"
"  hint: (e.g., 'git pull ...') before pushing again.\n"
"  hint: See the 'Note about fast-forwards' in 'git push --help' for "
"details."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:382
msgid ""
"You are getting an error because there are changes on the server that "
"aren't on your computer. You need to pull and merge those changes."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:388
msgid "Step 1: Pull Changes From The Server"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:390
msgid "Pull changes from the server:"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:392
msgid "$ git pull"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:396
msgid ""
"Normally, this will work fine and you'll be done. If so, you can do a "
"``git push`` and your code will be pushed to the server."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:400
msgid "Step 2: Merging"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:402
msgid ""
"If you get a screen like the image below, the computer automatically "
"merged your code bases but it now wants you to type in a comment for the "
"merge. We'll take the default comment. Hold down the shift key and type "
"``ZZ``. If that doesn't work, hit escape, and then try again."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:408
msgid ""
"(You are in an editor called **vim** and it is asking you for a comment "
"about merging the files. Unfortunately vim is really hard to learn. "
"Shift-ZZ is the command to save, and all we want to do is get out of it "
"and move on.)"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:413
msgid ".. image:: chapters\\03_version_control\\vi_merge.png"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:414
msgid "It should finish with something that looks like:"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:416
msgid ""
"craven@DESKTOP-RAUFKMA MINGW64 ~/arcade-games-work2 (master)\n"
"Merge made by the 'recursive' strategy.\n"
" Lab 01 - First Program/lab_01.py | 3 ++-\n"
" 1 file changed, 2 insertions(+), 1 deletion(-)"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:423
msgid "If instead you get this:"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:439
msgid ""
"Then we edited the same file in the same spot. We have to tell the "
"computer if we want our changes, or the changes on the other computer."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:444
msgid "Step 3: Resolving a Merge Conflict"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:446
msgid "Do a ``git status``. It should look something like this:"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:448
msgid ""
"$ git status\n"
"On branch master\n"
"Your branch and 'origin/master' have diverged,\n"
"and have 1 and 1 different commits each, respectively.\n"
"  (use \"git pull\" to merge the remote branch into yours)\n"
"You have unmerged paths.\n"
"  (fix conflicts and run \"git commit\")\n"
"  (use \"git merge --abort\" to abort the merge)\n"
"\n"
"Unmerged paths:\n"
"  (use \"git add <file>...\" to mark resolution)\n"
"\n"
"        both modified:   Lab 01 - First Program/lab_01.py\n"
"\n"
"no changes added to commit (use \"git add\" and/or \"git commit -a\")"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:467
msgid "The key thing to look for is any file that says ``both modified``."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:469
msgid "If you want **your** copy, type:"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:471
msgid "$ git checkout --ours \"Lab 01 - First Program/lab_01.py\""
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:475
msgid ""
"If instead you want **their** copy (or the copy on the other computer) "
"type"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:478
msgid "$ git checkout --theirs \"Lab 01 - First Program/lab_01.py\""
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:482
msgid "Then when you are all done with all merges, type:"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:484
msgid ""
"craven@DESKTOP-RAUFKMA MINGW64 ~/arcade-games-work2 (master|MERGING)\n"
"$ git add *\n"
"\n"
"craven@DESKTOP-RAUFKMA MINGW64 ~/arcade-games-work2 (master|MERGING)\n"
"$ git commit -m\"Merged\"\n"
"[master e083f36] Merged\n"
"\n"
"craven@DESKTOP-RAUFKMA MINGW64 ~/arcade-games-work2 (master)\n"
"$ git push\n"
"Counting objects: 5, done.\n"
"Delta compression using up to 8 threads.\n"
"Compressing objects: 100% (5/5), done.\n"
"Writing objects: 100% (5/5), 531 bytes | 0 bytes/s, done.\n"
"Total 5 (delta 2), reused 0 (delta 0)\n"
"To bitbucket.org:pcraven/arcade-games-work2.git\n"
"   6a8f398..e083f36  master -> master"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:505
msgid "Step 4: Try Pushing Again"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:507
msgid ""
"$ git push\n"
"Counting objects: 6, done.\n"
"Delta compression using up to 8 threads.\n"
"Compressing objects: 100% (4/4), done.\n"
"Writing objects: 100% (6/6), 604 bytes | 0 bytes/s, done.\n"
"Total 6 (delta 2), reused 0 (delta 0)\n"
"To bitbucket.org:pcraven/arcade-games-work2.git\n"
"   d66b008..aeb9cf3  master -> master"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:521
msgid "Longer Git Command Reference"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:523
msgid ""
"In my experience with 300 level group-project classes, these commands "
"seem to capture most of what students need to do."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:527
msgid "Command"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:527
msgid "Description"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:529
msgid "``git status``"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:529
msgid "See what has changed"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:531
msgid "``git fetch``"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:531
msgid "Grab stuff from the server, but don't merge"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:533
msgid "``git merge --no-commit --no-ff test_branch``"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:533
msgid "Merge"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:535
msgid "``git merge --abort``"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:535
msgid "Abort a merge"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:537
msgid "``git pull``"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:537
msgid "Fetch and Merge"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:539
msgid "``git add myfile.txt``"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:539
msgid "Add myfile.txt to be committed"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:541
msgid "``git add .``"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:541
msgid "Add everything"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:543
msgid "``grep -r \"<< HEAD\" *``"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:543
msgid ""
"Search all files to see if there is merge error text. Do this before "
"committing"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:545
msgid "``git checkout --ours \"myfile.txt\"``"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:545
msgid "Toss your changes in a merge, use theirs"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:547
msgid "``git checkout --theirs \"myfile.txt\"``"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:547
msgid "Toss their changes, use yours"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:549
msgid "``git checkout -- .``"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:549
msgid ""
"Remove all your changes, go back to what was last committed. Untracked "
"files are kept."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:551
msgid "``git -f clean``"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:551
msgid "Remove untracked files"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:553
msgid "``git checkout 44fd``"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:553
msgid ""
"Find the hash of a check-in, and you can go back to that check in. (Don't"
" use 44fd, but replace with the has you want.)"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:555
msgid "``git checkout master``"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:555
msgid "Go back to most recent check in on the master branch."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:557
msgid "``git commit -m \"My message\"``"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:557
msgid ""
"Commit your work. Use a descriptive message or the other people in the "
"class will be irritated with you."
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:559
msgid "``git push``"
msgstr ""

#: ../../source/chapters/03_version_control/index.rst:559
msgid "Push commit up to the server."
msgstr ""

