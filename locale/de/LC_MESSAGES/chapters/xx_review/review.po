# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Paul Vincent Craven
# This file is distributed under the same license as the Arcade package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
# derSuessmann <arcade-book-de@dersuessmann.de>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Arcade Fall 2018\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-09 19:32+0200\n"
"PO-Revision-Date: 2019-07-09 20:55+0200\n"
"Last-Translator: derSuessmann <arcade-book-de@dersuessmann.de>\n"
"Language-Team: German <arcade-book-de@dersuessmann.de>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"X-Generator: Gtranslator 3.32.1\n"

#: ../../source/chapters/xx_review/review.rst:4
msgid "Review"
msgstr "Review"

#: ../../source/chapters/xx_review/review.rst:6
msgid ""
"For each of these, copy the code to a blank program. Then fill out the top "
"part so that the bottom part works. Do not modify the bottom part in any "
"way. Do not indent it or put it in a function. You are writing functions (or "
"classes) in the top part that will satisfy all the tests in the bottom part."
msgstr ""
"Kopieren Sie für jedes dieser Programme den Programmcode in eine leere "
"Datei. Füllen Sie dann den oberen Teil aus, damit der untere Teil "
"funktioniert. Verändern Sie den unteren Teil in keiner Weise. Nicht "
"einrücken oder in eine Funktion einfügen. Sie schreiben Funktionen (oder "
"Klassen) in den oberen Teil, die alle Tests im unteren Teil erfüllen."

#: ../../source/chapters/xx_review/review.rst:11
msgid "Question 1"
msgstr "Frage 1"

#: ../../source/chapters/xx_review/review.rst:13
msgid ""
"If you need help for this question, go back and review returning values from "
"functions."
msgstr ""
"Wenn Sie Hilfe für diese Frage benötigen, überprüfen Sie die zurückgegebenen "
"Werte von Funktionen."

#: ../../source/chapters/xx_review/review.rst:15
msgid "test_01.py"
msgstr "test_01.py"

#: ../../source/chapters/xx_review/review.rst:15
msgid ""
"# Write a function called \"f\" that will pass all the tests below:\n"
"\n"
"\n"
"\n"
"\n"
"# --- Tests. Do not change anything below this line. ---\n"
"# Write your code above the line to pass all the tests.\n"
"\n"
"if f(30, 40) == 70:\n"
"    print(\"Test 1 passed\")\n"
"else:\n"
"    print(\"Test 1 failed\")\n"
"\n"
"if f(0, 0) == 0:\n"
"    print(\"Test 2 passed\")\n"
"else:\n"
"    print(\"Test 2 failed\")\n"
"\n"
"if f(-20, 10) == -10:\n"
"    print(\"Test 3 passed\")\n"
"else:\n"
"    print(\"Test 3 failed\")\n"
"\n"
"if f(0.5, 0.5) == 1:\n"
"    print(\"Test 4 passed\")\n"
"else:\n"
"    print(\"Test 4 failed\")\n"
msgstr ""
"# Write a function called \"f\" that will pass all the tests below:\n"
"\n"
"\n"
"\n"
"\n"
"# --- Tests. Do not change anything below this line. ---\n"
"# Write your code above the line to pass all the tests.\n"
"\n"
"if f(30, 40) == 70:\n"
"    print(\"Test 1 passed\")\n"
"else:\n"
"    print(\"Test 1 failed\")\n"
"\n"
"if f(0, 0) == 0:\n"
"    print(\"Test 2 passed\")\n"
"else:\n"
"    print(\"Test 2 failed\")\n"
"\n"
"if f(-20, 10) == -10:\n"
"    print(\"Test 3 passed\")\n"
"else:\n"
"    print(\"Test 3 failed\")\n"
"\n"
"if f(0.5, 0.5) == 1:\n"
"    print(\"Test 4 passed\")\n"
"else:\n"
"    print(\"Test 4 failed\")\n"

#: ../../source/chapters/xx_review/review.rst:21
msgid "Question 2"
msgstr "Frage 2"

#: ../../source/chapters/xx_review/review.rst:23
msgid "test_02.py"
msgstr "test_02.py"

#: ../../source/chapters/xx_review/review.rst:23
msgid ""
"# Write a function called \"f\" that will pass all the tests below:\n"
"\n"
"\n"
"\n"
"\n"
"# --- Tests. Do not change anything below this line. ---\n"
"# Write your code above the line to pass all the tests.\n"
"\n"
"if f(0, 0) == 0:\n"
"    print(\"Test 1 passed\")\n"
"else:\n"
"    print(\"Test 1 failed\")\n"
"\n"
"if f(5, 0) == 0:\n"
"    print(\"Test 2 passed\")\n"
"else:\n"
"    print(\"Test 2 failed\")\n"
"\n"
"if f(10, 10) == 100:\n"
"    print(\"Test 3 passed\")\n"
"else:\n"
"    print(\"Test 3 failed\")\n"
"\n"
"if f(0.5, 0.5) == 0.25:\n"
"    print(\"Test 4 passed\")\n"
"else:\n"
"    print(\"Test 4 failed\")\n"
msgstr ""
"# Write a function called \"f\" that will pass all the tests below:\n"
"\n"
"\n"
"\n"
"\n"
"# --- Tests. Do not change anything below this line. ---\n"
"# Write your code above the line to pass all the tests.\n"
"\n"
"if f(0, 0) == 0:\n"
"    print(\"Test 1 passed\")\n"
"else:\n"
"    print(\"Test 1 failed\")\n"
"\n"
"if f(5, 0) == 0:\n"
"    print(\"Test 2 passed\")\n"
"else:\n"
"    print(\"Test 2 failed\")\n"
"\n"
"if f(10, 10) == 100:\n"
"    print(\"Test 3 passed\")\n"
"else:\n"
"    print(\"Test 3 failed\")\n"
"\n"
"if f(0.5, 0.5) == 0.25:\n"
"    print(\"Test 4 passed\")\n"
"else:\n"
"    print(\"Test 4 failed\")\n"

#: ../../source/chapters/xx_review/review.rst:29
msgid "Question 3"
msgstr "Frage 3"

#: ../../source/chapters/xx_review/review.rst:31
msgid "This involves both division and addition."
msgstr "Dies beinhaltet sowohl das Teilen als auch das Addieren."

#: ../../source/chapters/xx_review/review.rst:33
msgid "test_03.py"
msgstr "test_03.py"

#: ../../source/chapters/xx_review/review.rst:33
msgid ""
"# Write a function called \"f\" that will pass all the tests below:\n"
"\n"
"\n"
"\n"
"\n"
"# --- Tests. Do not change anything below this line. ---\n"
"# Write your code above the line to pass all the tests.\n"
"\n"
"if f(10, 10, 1) == 20:\n"
"    print(\"Test 1 passed\")\n"
"else:\n"
"    print(\"Test 1 failed\")\n"
"\n"
"if f(15, 10, 1) == 25:\n"
"    print(\"Test 2 passed\")\n"
"else:\n"
"    print(\"Test 2 failed\")\n"
"\n"
"if f(10, 10, 2) == 10:\n"
"    print(\"Test 3 passed\")\n"
"else:\n"
"    print(\"Test 3 failed\")\n"
"\n"
"if f(10, 10, 10) == 2:\n"
"    print(\"Test 4 passed\")\n"
"else:\n"
"    print(\"Test 4 failed\")\n"
"\n"
"if f(4, 6, 2) == 5:\n"
"    print(\"Test 5 passed\")\n"
"else:\n"
"    print(\"Test 5 failed\")\n"
"\n"
"if f(150, 50, 50) == 4:\n"
"    print(\"Test 6 passed\")\n"
"else:\n"
"    print(\"Test 6 failed\")\n"
msgstr ""
"# Write a function called \"f\" that will pass all the tests below:\n"
"\n"
"\n"
"\n"
"\n"
"# --- Tests. Do not change anything below this line. ---\n"
"# Write your code above the line to pass all the tests.\n"
"\n"
"if f(10, 10, 1) == 20:\n"
"    print(\"Test 1 passed\")\n"
"else:\n"
"    print(\"Test 1 failed\")\n"
"\n"
"if f(15, 10, 1) == 25:\n"
"    print(\"Test 2 passed\")\n"
"else:\n"
"    print(\"Test 2 failed\")\n"
"\n"
"if f(10, 10, 2) == 10:\n"
"    print(\"Test 3 passed\")\n"
"else:\n"
"    print(\"Test 3 failed\")\n"
"\n"
"if f(10, 10, 10) == 2:\n"
"    print(\"Test 4 passed\")\n"
"else:\n"
"    print(\"Test 4 failed\")\n"
"\n"
"if f(4, 6, 2) == 5:\n"
"    print(\"Test 5 passed\")\n"
"else:\n"
"    print(\"Test 5 failed\")\n"
"\n"
"if f(150, 50, 50) == 4:\n"
"    print(\"Test 6 passed\")\n"
"else:\n"
"    print(\"Test 6 failed\")\n"

#: ../../source/chapters/xx_review/review.rst:39
msgid "Question 4"
msgstr "Frage 4"

#: ../../source/chapters/xx_review/review.rst:41
msgid ""
"Make sure the next one works for other temperatures, not just the ones we "
"test. The function you write will not print anything, just return the proper "
"value."
msgstr ""
"Stellen Sie sicher, dass die nächste für andere Temperaturen funktioniert, "
"nicht nur für die, die wir testen. Die Funktion, die Sie schreiben, gibt "
"nichts aus, sondern gibt nur den richtigen Wert zurück."

#: ../../source/chapters/xx_review/review.rst:44
msgid "test_04.py"
msgstr "test_04.py"

#: ../../source/chapters/xx_review/review.rst:44
msgid ""
"# Write a function called how_is_the_temperature that returns a string "
"based\n"
"# on the temperature passed into it.\n"
"# Try to get this to work based on temperature ranges, rather than exact\n"
"# temperatures.\n"
"\n"
"\n"
"\n"
"# --- Tests. Do not change anything below this line. ---\n"
"# Write your code above the line to pass all the tests.\n"
"\n"
"if how_is_the_temperature(95) == \"Hot\":\n"
"    print(\"Test 1 passed\")\n"
"else:\n"
"    print(\"Test 1 failed\")\n"
"\n"
"if how_is_the_temperature(85) == \"Warm\":\n"
"    print(\"Test 2 passed\")\n"
"else:\n"
"    print(\"Test 2 failed\")\n"
"\n"
"if how_is_the_temperature(70) == \"Great\":\n"
"    print(\"Test 3 passed\")\n"
"else:\n"
"    print(\"Test 3 failed\")\n"
"\n"
"if how_is_the_temperature(50) == \"Cool\":\n"
"    print(\"Test 4 passed\")\n"
"else:\n"
"    print(\"Test 4 failed\")\n"
"\n"
"if how_is_the_temperature(30) == \"Cold\":\n"
"    print(\"Test 5 passed\")\n"
"else:\n"
"    print(\"Test 5 failed\")\n"
msgstr ""
"# Write a function called how_is_the_temperature that returns a string "
"based\n"
"# on the temperature passed into it.\n"
"# Try to get this to work based on temperature ranges, rather than exact\n"
"# temperatures.\n"
"\n"
"\n"
"\n"
"# --- Tests. Do not change anything below this line. ---\n"
"# Write your code above the line to pass all the tests.\n"
"\n"
"if how_is_the_temperature(95) == \"Hot\":\n"
"    print(\"Test 1 passed\")\n"
"else:\n"
"    print(\"Test 1 failed\")\n"
"\n"
"if how_is_the_temperature(85) == \"Warm\":\n"
"    print(\"Test 2 passed\")\n"
"else:\n"
"    print(\"Test 2 failed\")\n"
"\n"
"if how_is_the_temperature(70) == \"Great\":\n"
"    print(\"Test 3 passed\")\n"
"else:\n"
"    print(\"Test 3 failed\")\n"
"\n"
"if how_is_the_temperature(50) == \"Cool\":\n"
"    print(\"Test 4 passed\")\n"
"else:\n"
"    print(\"Test 4 failed\")\n"
"\n"
"if how_is_the_temperature(30) == \"Cold\":\n"
"    print(\"Test 5 passed\")\n"
"else:\n"
"    print(\"Test 5 failed\")\n"

#: ../../source/chapters/xx_review/review.rst:50
msgid "Question 5"
msgstr "Frage 5"

#: ../../source/chapters/xx_review/review.rst:52
msgid ""
"Make sure the next one works for other values, not just the ones we test. "
"This question does not involve any printing, just returning."
msgstr ""
"Stellen Sie sicher, dass der nächste für andere Werte funktioniert, nicht "
"nur für die, die wir testen. Bei dieser Frage geht es nicht um die Ausgabe, "
"sondern nur um den Rückgabewert."

#: ../../source/chapters/xx_review/review.rst:55
msgid "test_05.py"
msgstr "test_05.py"

#: ../../source/chapters/xx_review/review.rst:55
msgid ""
"# Write a function that figures out if a number is even or odd.\n"
"# Make it work for every number, not just the ones we test here.\n"
"\n"
"\n"
"\n"
"# --- Tests. Do not change anything below this line. ---\n"
"# Write your code above the line to pass all the tests.\n"
"\n"
"if even_or_odd(0) == \"Even\":\n"
"    print(\"Test 1 passed\")\n"
"else:\n"
"    print(\"Test 1 failed\")\n"
"\n"
"if even_or_odd(1) == \"Odd\":\n"
"    print(\"Test 2 passed\")\n"
"else:\n"
"    print(\"Test 2 failed\")\n"
"\n"
"if even_or_odd(-1) == \"Odd\":\n"
"    print(\"Test 3 passed\")\n"
"else:\n"
"    print(\"Test 3 failed\")\n"
"\n"
"if even_or_odd(100) == \"Even\":\n"
"    print(\"Test 4 passed\")\n"
"else:\n"
"    print(\"Test 4 failed\")\n"
"\n"
"if even_or_odd(1001) == \"Odd\":\n"
"    print(\"Test 5 passed\")\n"
"else:\n"
"    print(\"Test 5 failed\")\n"
msgstr ""
"# Write a function that figures out if a number is even or odd.\n"
"# Make it work for every number, not just the ones we test here.\n"
"\n"
"\n"
"\n"
"# --- Tests. Do not change anything below this line. ---\n"
"# Write your code above the line to pass all the tests.\n"
"\n"
"if even_or_odd(0) == \"Even\":\n"
"    print(\"Test 1 passed\")\n"
"else:\n"
"    print(\"Test 1 failed\")\n"
"\n"
"if even_or_odd(1) == \"Odd\":\n"
"    print(\"Test 2 passed\")\n"
"else:\n"
"    print(\"Test 2 failed\")\n"
"\n"
"if even_or_odd(-1) == \"Odd\":\n"
"    print(\"Test 3 passed\")\n"
"else:\n"
"    print(\"Test 3 failed\")\n"
"\n"
"if even_or_odd(100) == \"Even\":\n"
"    print(\"Test 4 passed\")\n"
"else:\n"
"    print(\"Test 4 failed\")\n"
"\n"
"if even_or_odd(1001) == \"Odd\":\n"
"    print(\"Test 5 passed\")\n"
"else:\n"
"    print(\"Test 5 failed\")\n"

#: ../../source/chapters/xx_review/review.rst:61
msgid "Question 6"
msgstr "Frage 6"

#: ../../source/chapters/xx_review/review.rst:63
msgid "If you need to, go back and review classes."
msgstr "Wenn nötig, gehen Sie zurück und wiederholen Sie die Kurse."

#: ../../source/chapters/xx_review/review.rst:65
msgid "test_06.py"
msgstr "test_06.py"

#: ../../source/chapters/xx_review/review.rst:65
msgid ""
"# Create a class called bird, with the attributes x and change_x, and a "
"method\n"
"# called \"move\". Have it pass the tests below.\n"
"\n"
"\n"
"\n"
"# --- Tests. Do not change anything below this line. ---\n"
"# Write your code above the line to pass all the tests.\n"
"\n"
"my_bird = Bird()\n"
"\n"
"# Test to see if an attribute was created correctly\n"
"if my_bird.x == 0:\n"
"    print(\"Test 1 passed\")\n"
"else:\n"
"    print(\"Test 1 failed\")\n"
"\n"
"# Test to see if an attribute was created correctly\n"
"if my_bird.change_x == 0:\n"
"    print(\"Test 2 passed\")\n"
"else:\n"
"    print(\"Test 2 failed\")\n"
"\n"
"# Test the move method to see if it properly moves the bird\n"
"my_bird.change_x = 5\n"
"my_bird.move()\n"
"my_bird.move()\n"
"\n"
"if my_bird.x == 10:\n"
"    print(\"Test 3 passed\")\n"
"else:\n"
"    print(\"Test 3 failed\")\n"
msgstr ""
"# Create a class called bird, with the attributes x and change_x, and a "
"method\n"
"# called \"move\". Have it pass the tests below.\n"
"\n"
"\n"
"\n"
"# --- Tests. Do not change anything below this line. ---\n"
"# Write your code above the line to pass all the tests.\n"
"\n"
"my_bird = Bird()\n"
"\n"
"# Test to see if an attribute was created correctly\n"
"if my_bird.x == 0:\n"
"    print(\"Test 1 passed\")\n"
"else:\n"
"    print(\"Test 1 failed\")\n"
"\n"
"# Test to see if an attribute was created correctly\n"
"if my_bird.change_x == 0:\n"
"    print(\"Test 2 passed\")\n"
"else:\n"
"    print(\"Test 2 failed\")\n"
"\n"
"# Test the move method to see if it properly moves the bird\n"
"my_bird.change_x = 5\n"
"my_bird.move()\n"
"my_bird.move()\n"
"\n"
"if my_bird.x == 10:\n"
"    print(\"Test 3 passed\")\n"
"else:\n"
"    print(\"Test 3 failed\")\n"
