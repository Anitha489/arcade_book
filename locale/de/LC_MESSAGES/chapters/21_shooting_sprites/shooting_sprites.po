# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Paul Vincent Craven
# This file is distributed under the same license as the Arcade package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
# derSuessmann <arcade-book-de@dersuessmann.de>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Arcade Fall 2018\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-09 19:32+0200\n"
"PO-Revision-Date: 2019-07-15 08:47+0200\n"
"Last-Translator: derSuessmann <arcade-book-de@dersuessmann.de>\n"
"Language-Team: German <arcade-book-de@dersuessmann.de>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"X-Generator: Gtranslator 3.32.1\n"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:3
msgid "Using Sprites to Shoot"
msgstr "Verwenden von Sprites zum Schießen"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:5
msgid "How do we get sprites that we can shoot?"
msgstr "Wie bekommen wir Sprites, die wir schießen können?"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:9
msgid ".. image:: chapters/21_shooting_sprites/sprites_bullet.gif"
msgstr ".. image:: chapters/21_shooting_sprites/sprites_bullet.gif"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:9
msgid "Coins shooting"
msgstr "Münzen abschießen"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:12
msgid "Getting Started"
msgstr "Einstieg"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:13
msgid "First, let's go back to a program to start with."
msgstr "Kehren wir zunächst zu einem Programm für den Einstieg zurück."

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:15
msgid "Starting program for shooting sprites"
msgstr "Einstiegsprogramm zum Schießen von Sprites"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:15
msgid ""
"import random\n"
"import arcade\n"
"\n"
"SPRITE_SCALING_PLAYER = 0.5\n"
"SPRITE_SCALING_COIN = 0.2\n"
"SPRITE_SCALING_LASER = 0.8\n"
"COIN_COUNT = 50\n"
"\n"
"SCREEN_WIDTH = 800\n"
"SCREEN_HEIGHT = 600\n"
"\n"
"BULLET_SPEED = 5\n"
"\n"
"\n"
"class MyGame(arcade.Window):\n"
"    \"\"\" Main application class. \"\"\"\n"
"\n"
"    def __init__(self):\n"
"        \"\"\" Initializer \"\"\"\n"
"        # Call the parent class initializer\n"
"        super().__init__(SCREEN_WIDTH, SCREEN_HEIGHT, \"Sprites and Bullets "
"Demo\")\n"
"\n"
"        # Variables that will hold sprite lists\n"
"        self.player_list = None\n"
"        self.coin_list = None\n"
"\n"
"        # Set up the player info\n"
"        self.player_sprite = None\n"
"        self.score = 0\n"
"\n"
"        # Don't show the mouse cursor\n"
"        self.set_mouse_visible(False)\n"
"\n"
"        arcade.set_background_color(arcade.color.AMAZON)\n"
"\n"
"    def setup(self):\n"
"\n"
"        \"\"\" Set up the game and initialize the variables. \"\"\"\n"
"\n"
"        # Sprite lists\n"
"        self.player_list = arcade.SpriteList()\n"
"        self.coin_list = arcade.SpriteList()\n"
"\n"
"        # Set up the player\n"
"        self.score = 0\n"
"\n"
"        # Image from kenney.nl\n"
"        self.player_sprite = arcade.Sprite(\"character.png\", "
"SPRITE_SCALING_PLAYER)\n"
"        self.player_sprite.center_x = 50\n"
"        self.player_sprite.center_y = 70\n"
"        self.player_list.append(self.player_sprite)\n"
"\n"
"        # Create the coins\n"
"        for i in range(COIN_COUNT):\n"
"\n"
"            # Create the coin instance\n"
"            # Coin image from kenney.nl\n"
"            coin = arcade.Sprite(\"coin_01.png\", SPRITE_SCALING_COIN)\n"
"\n"
"            # Position the coin\n"
"            coin.center_x = random.randrange(SCREEN_WIDTH)\n"
"            coin.center_y = random.randrange(SCREEN_HEIGHT)\n"
"\n"
"            # Add the coin to the lists\n"
"            self.coin_list.append(coin)\n"
"\n"
"        # Set the background color\n"
"        arcade.set_background_color(arcade.color.AMAZON)\n"
"\n"
"    def on_draw(self):\n"
"        \"\"\"\n"
"        Render the screen.\n"
"        \"\"\"\n"
"\n"
"        # This command has to happen before we start drawing\n"
"        arcade.start_render()\n"
"\n"
"        # Draw all the sprites.\n"
"        self.coin_list.draw()\n"
"        self.player_list.draw()\n"
"\n"
"        # Render the text\n"
"        arcade.draw_text(f\"Score: {self.score}\", 10, 20, arcade.color."
"WHITE, 14)\n"
"\n"
"    def on_mouse_motion(self, x, y, dx, dy):\n"
"        \"\"\"\n"
"        Called whenever the mouse moves.\n"
"        \"\"\"\n"
"        self.player_sprite.center_x = x\n"
"        self.player_sprite.center_y = y\n"
"\n"
"    def on_mouse_press(self, x, y, button, modifiers):\n"
"        \"\"\"\n"
"        Called whenever the mouse button is clicked.\n"
"        \"\"\"\n"
"        pass\n"
"\n"
"    def update(self, delta_time):\n"
"        \"\"\" Movement and game logic \"\"\"\n"
"\n"
"        # Call update on all sprites\n"
"        self.coin_list.update()\n"
"\n"
"\n"
"def main():\n"
"    window = MyGame()\n"
"    window.setup()\n"
"    arcade.run()\n"
"\n"
"\n"
"if __name__ == \"__main__\":\n"
"    main()\n"
msgstr ""
"import random\n"
"import arcade\n"
"\n"
"SPRITE_SCALING_PLAYER = 0.5\n"
"SPRITE_SCALING_COIN = 0.2\n"
"SPRITE_SCALING_LASER = 0.8\n"
"COIN_COUNT = 50\n"
"\n"
"SCREEN_WIDTH = 800\n"
"SCREEN_HEIGHT = 600\n"
"\n"
"BULLET_SPEED = 5\n"
"\n"
"\n"
"class MyGame(arcade.Window):\n"
"    \"\"\" Main application class. \"\"\"\n"
"\n"
"    def __init__(self):\n"
"        \"\"\" Initializer \"\"\"\n"
"        # Call the parent class initializer\n"
"        super().__init__(SCREEN_WIDTH, SCREEN_HEIGHT, \"Sprites and Bullets "
"Demo\")\n"
"\n"
"        # Variables that will hold sprite lists\n"
"        self.player_list = None\n"
"        self.coin_list = None\n"
"\n"
"        # Set up the player info\n"
"        self.player_sprite = None\n"
"        self.score = 0\n"
"\n"
"        # Don't show the mouse cursor\n"
"        self.set_mouse_visible(False)\n"
"\n"
"        arcade.set_background_color(arcade.color.AMAZON)\n"
"\n"
"    def setup(self):\n"
"\n"
"        \"\"\" Set up the game and initialize the variables. \"\"\"\n"
"\n"
"        # Sprite lists\n"
"        self.player_list = arcade.SpriteList()\n"
"        self.coin_list = arcade.SpriteList()\n"
"\n"
"        # Set up the player\n"
"        self.score = 0\n"
"\n"
"        # Image from kenney.nl\n"
"        self.player_sprite = arcade.Sprite(\"character.png\", "
"SPRITE_SCALING_PLAYER)\n"
"        self.player_sprite.center_x = 50\n"
"        self.player_sprite.center_y = 70\n"
"        self.player_list.append(self.player_sprite)\n"
"\n"
"        # Create the coins\n"
"        for i in range(COIN_COUNT):\n"
"\n"
"            # Create the coin instance\n"
"            # Coin image from kenney.nl\n"
"            coin = arcade.Sprite(\"coin_01.png\", SPRITE_SCALING_COIN)\n"
"\n"
"            # Position the coin\n"
"            coin.center_x = random.randrange(SCREEN_WIDTH)\n"
"            coin.center_y = random.randrange(SCREEN_HEIGHT)\n"
"\n"
"            # Add the coin to the lists\n"
"            self.coin_list.append(coin)\n"
"\n"
"        # Set the background color\n"
"        arcade.set_background_color(arcade.color.AMAZON)\n"
"\n"
"    def on_draw(self):\n"
"        \"\"\"\n"
"        Render the screen.\n"
"        \"\"\"\n"
"\n"
"        # This command has to happen before we start drawing\n"
"        arcade.start_render()\n"
"\n"
"        # Draw all the sprites.\n"
"        self.coin_list.draw()\n"
"        self.player_list.draw()\n"
"\n"
"        # Render the text\n"
"        arcade.draw_text(f\"Score: {self.score}\", 10, 20, arcade.color."
"WHITE, 14)\n"
"\n"
"    def on_mouse_motion(self, x, y, dx, dy):\n"
"        \"\"\"\n"
"        Called whenever the mouse moves.\n"
"        \"\"\"\n"
"        self.player_sprite.center_x = x\n"
"        self.player_sprite.center_y = y\n"
"\n"
"    def on_mouse_press(self, x, y, button, modifiers):\n"
"        \"\"\"\n"
"        Called whenever the mouse button is clicked.\n"
"        \"\"\"\n"
"        pass\n"
"\n"
"    def update(self, delta_time):\n"
"        \"\"\" Movement and game logic \"\"\"\n"
"\n"
"        # Call update on all sprites\n"
"        self.coin_list.update()\n"
"\n"
"\n"
"def main():\n"
"    window = MyGame()\n"
"    window.setup()\n"
"    arcade.run()\n"
"\n"
"\n"
"if __name__ == \"__main__\":\n"
"    main()\n"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:20
msgid ""
"If you run this program, the player should move around the screen, and their "
"should be coins. But not much else is happening yet."
msgstr ""
"Wenn du dieses Programm ausführst, sollte sich die Spielfigur auf dem "
"Bildschirm bewegen und es sollte Münzen geben. Aber sonst passiert noch "
"nicht viel."

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:23
msgid "Next, we need a 'shooting' image:"
msgstr "Als nächstes brauchen wir ein 'Schuss'-Bild:"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:27
msgid ".. image:: chapters/21_shooting_sprites/laserBlue01.png"
msgstr ".. image:: chapters/21_shooting_sprites/laserBlue01.png"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:27
msgid "laserBlue01.png"
msgstr "laserBlue01.png"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:29
msgid ""
"Download this image (originally from Kenney.nl) and make sure it is in the "
"same folder as your code."
msgstr ""
"Lade dieses Bild (ursprünglich von Kenney.nl) herunter und vergewissere "
"dich, dass es sich im selben Ordner wie dein Code befindet."

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:33
msgid "Keeping The Player At The Bottom"
msgstr "Die Spielfigur unten behalten"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:35
msgid ""
"Right now the player can move anywhere on the screen. We want to keep that "
"sprite fixed to the bottom of the screen."
msgstr ""
"Im Moment kann sich die Spielfigur überall auf dem Bildschirm bewegen. Wir "
"wollen das Sprite am unteren Bildschirmrand fixieren."

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:38
msgid ""
"To do that, just remove the line of code for moving the player on the y-"
"axis. The player will keep the same y value that we set back in the "
"``setup`` method."
msgstr ""
"Entferne dazu einfach die Codezeile, um die Spielfigur auf der y-Achse zu "
"bewegen. Die Spielfigur behält den gleichen y-Wert bei, den wir in der "
"Methode ``setup`` gesetzt haben."

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:41
msgid ""
"def on_mouse_motion(self, x, y, dx, dy):\n"
"    \"\"\"\n"
"    Called whenever the mouse moves.\n"
"    \"\"\"\n"
"    self.player_sprite.center_x = x\n"
"    # REMOVE THIS LINE: self.player_sprite.center_y = y"
msgstr ""
"def on_mouse_motion(self, x, y, dx, dy):\n"
"    \"\"\"\n"
"    Called whenever the mouse moves.\n"
"    \"\"\"\n"
"    self.player_sprite.center_x = x\n"
"    # REMOVE THIS LINE: self.player_sprite.center_y = y"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:52
msgid "Moving The Coins Up"
msgstr "Die Münzen nach oben bewegen"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:54
msgid ""
"We want all the coins above the player. So we can adjust the starting y "
"locations to have a starting point of 150 instead of 0. That will keep them "
"above the player."
msgstr ""
"Wir wollen, dass sich alle Münzen über der Spielfigur befinden. Wir können "
"also die Startpositionen so einstellen, dass sie einen Startpunkt von 150 "
"anstelle von 0 haben. Dadurch bleiben sie über der Spielfigur."

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:57
msgid ""
"# Create the coins\n"
"for i in range(COIN_COUNT):\n"
"\n"
"    # Create the coin instance\n"
"    # Coin image from kenney.nl\n"
"    coin = arcade.Sprite(\"coin_01.png\", SPRITE_SCALING_COIN)\n"
"\n"
"    # Position the coin\n"
"    coin.center_x = random.randrange(SCREEN_WIDTH)\n"
"    coin.center_y = random.randrange(150, SCREEN_HEIGHT)\n"
"\n"
"    # Add the coin to the lists\n"
"    self.coin_list.append(coin)"
msgstr ""
"# Create the coins\n"
"for i in range(COIN_COUNT):\n"
"\n"
"    # Create the coin instance\n"
"    # Coin image from kenney.nl\n"
"    coin = arcade.Sprite(\"coin_01.png\", SPRITE_SCALING_COIN)\n"
"\n"
"    # Position the coin\n"
"    coin.center_x = random.randrange(SCREEN_WIDTH)\n"
"    coin.center_y = random.randrange(150, SCREEN_HEIGHT)\n"
"\n"
"    # Add the coin to the lists\n"
"    self.coin_list.append(coin)"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:75
msgid "Set Up Bullet List"
msgstr "Liste mit Schüssen einrichten"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:77
msgid ""
"We need to create a list to manage the bullets. There are four places we "
"need to add this ``bullet_list`` code:"
msgstr ""
"Wir müssen eine Liste erstellen, um die Schüsse/Kugeln zu verwalten. Es gibt "
"vier Stellen, an denen wir diesen ``bullet_list`` Code hinzufügen müssen:"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:80
msgid "Create the ``bullet_list`` variable (Line 26)"
msgstr "Erstellen der Variable ``bullet_list`` (Zeile 26)"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:81
msgid "Create an instance of ``SpriteList`` (Line 44)"
msgstr "Erstellen eines Exemplar von ``SpriteList`` (Zeile 44)"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:82
msgid "Draw the bullet list (Line 83)"
msgstr "Zeichnen der Schussliste (Zeile 83)"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:83
msgid "Update the bullet list (Line 105)"
msgstr "Aktualisieren der Schussliste (Zeile 105)"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:85
msgid "Set up bullet list"
msgstr "Einrichten einer Schussliste"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:85
msgid ""
"import random\n"
"import arcade\n"
"\n"
"SPRITE_SCALING_PLAYER = 0.5\n"
"SPRITE_SCALING_COIN = 0.2\n"
"SPRITE_SCALING_LASER = 0.8\n"
"COIN_COUNT = 50\n"
"\n"
"SCREEN_WIDTH = 800\n"
"SCREEN_HEIGHT = 600\n"
"\n"
"BULLET_SPEED = 5\n"
"\n"
"\n"
"class MyGame(arcade.Window):\n"
"    \"\"\" Main application class. \"\"\"\n"
"\n"
"    def __init__(self):\n"
"        \"\"\" Initializer \"\"\"\n"
"        # Call the parent class initializer\n"
"        super().__init__(SCREEN_WIDTH, SCREEN_HEIGHT, \"Sprites and Bullets "
"Demo\")\n"
"\n"
"        # Variables that will hold sprite lists\n"
"        self.player_list = None\n"
"        self.coin_list = None\n"
"        self.bullet_list = None\n"
"\n"
"        # Set up the player info\n"
"        self.player_sprite = None\n"
"        self.score = 0\n"
"\n"
"        # Don't show the mouse cursor\n"
"        self.set_mouse_visible(False)\n"
"\n"
"        arcade.set_background_color(arcade.color.AMAZON)\n"
"\n"
"    def setup(self):\n"
"\n"
"        \"\"\" Set up the game and initialize the variables. \"\"\"\n"
"\n"
"        # Sprite lists\n"
"        self.player_list = arcade.SpriteList()\n"
"        self.coin_list = arcade.SpriteList()\n"
"        self.bullet_list = arcade.SpriteList()\n"
"\n"
"        # Set up the player\n"
"        self.score = 0\n"
"\n"
"        # Image from kenney.nl\n"
"        self.player_sprite = arcade.Sprite(\"character.png\", "
"SPRITE_SCALING_PLAYER)\n"
"        self.player_sprite.center_x = 50\n"
"        self.player_sprite.center_y = 70\n"
"        self.player_list.append(self.player_sprite)\n"
"\n"
"        # Create the coins\n"
"        for i in range(COIN_COUNT):\n"
"\n"
"            # Create the coin instance\n"
"            # Coin image from kenney.nl\n"
"            coin = arcade.Sprite(\"coin_01.png\", SPRITE_SCALING_COIN)\n"
"\n"
"            # Position the coin\n"
"            coin.center_x = random.randrange(SCREEN_WIDTH)\n"
"            coin.center_y = random.randrange(150, SCREEN_HEIGHT)\n"
"\n"
"            # Add the coin to the lists\n"
"            self.coin_list.append(coin)\n"
"\n"
"        # Set the background color\n"
"        arcade.set_background_color(arcade.color.AMAZON)\n"
"\n"
"    def on_draw(self):\n"
"        \"\"\"\n"
"        Render the screen.\n"
"        \"\"\"\n"
"\n"
"        # This command has to happen before we start drawing\n"
"        arcade.start_render()\n"
"\n"
"        # Draw all the sprites.\n"
"        self.coin_list.draw()\n"
"        self.player_list.draw()\n"
"        self.bullet_list.draw()\n"
"\n"
"        # Render the text\n"
"        arcade.draw_text(f\"Score: {self.score}\", 10, 20, arcade.color."
"WHITE, 14)\n"
"\n"
"    def on_mouse_motion(self, x, y, dx, dy):\n"
"        \"\"\"\n"
"        Called whenever the mouse moves.\n"
"        \"\"\"\n"
"        self.player_sprite.center_x = x\n"
"\n"
"    def on_mouse_press(self, x, y, button, modifiers):\n"
"        \"\"\"\n"
"        Called whenever the mouse button is clicked.\n"
"        \"\"\"\n"
"        pass\n"
"\n"
"    def update(self, delta_time):\n"
"        \"\"\" Movement and game logic \"\"\"\n"
"\n"
"        # Call update on all sprites\n"
"        self.coin_list.update()\n"
"        self.bullet_list.update()\n"
"\n"
"\n"
"def main():\n"
"    window = MyGame()\n"
"    window.setup()\n"
"    arcade.run()\n"
"\n"
"\n"
"if __name__ == \"__main__\":\n"
"    main()\n"
msgstr ""
"import random\n"
"import arcade\n"
"\n"
"SPRITE_SCALING_PLAYER = 0.5\n"
"SPRITE_SCALING_COIN = 0.2\n"
"SPRITE_SCALING_LASER = 0.8\n"
"COIN_COUNT = 50\n"
"\n"
"SCREEN_WIDTH = 800\n"
"SCREEN_HEIGHT = 600\n"
"\n"
"BULLET_SPEED = 5\n"
"\n"
"\n"
"class MyGame(arcade.Window):\n"
"    \"\"\" Main application class. \"\"\"\n"
"\n"
"    def __init__(self):\n"
"        \"\"\" Initializer \"\"\"\n"
"        # Call the parent class initializer\n"
"        super().__init__(SCREEN_WIDTH, SCREEN_HEIGHT, \"Sprites and Bullets "
"Demo\")\n"
"\n"
"        # Variables that will hold sprite lists\n"
"        self.player_list = None\n"
"        self.coin_list = None\n"
"        self.bullet_list = None\n"
"\n"
"        # Set up the player info\n"
"        self.player_sprite = None\n"
"        self.score = 0\n"
"\n"
"        # Don't show the mouse cursor\n"
"        self.set_mouse_visible(False)\n"
"\n"
"        arcade.set_background_color(arcade.color.AMAZON)\n"
"\n"
"    def setup(self):\n"
"\n"
"        \"\"\" Set up the game and initialize the variables. \"\"\"\n"
"\n"
"        # Sprite lists\n"
"        self.player_list = arcade.SpriteList()\n"
"        self.coin_list = arcade.SpriteList()\n"
"        self.bullet_list = arcade.SpriteList()\n"
"\n"
"        # Set up the player\n"
"        self.score = 0\n"
"\n"
"        # Image from kenney.nl\n"
"        self.player_sprite = arcade.Sprite(\"character.png\", "
"SPRITE_SCALING_PLAYER)\n"
"        self.player_sprite.center_x = 50\n"
"        self.player_sprite.center_y = 70\n"
"        self.player_list.append(self.player_sprite)\n"
"\n"
"        # Create the coins\n"
"        for i in range(COIN_COUNT):\n"
"\n"
"            # Create the coin instance\n"
"            # Coin image from kenney.nl\n"
"            coin = arcade.Sprite(\"coin_01.png\", SPRITE_SCALING_COIN)\n"
"\n"
"            # Position the coin\n"
"            coin.center_x = random.randrange(SCREEN_WIDTH)\n"
"            coin.center_y = random.randrange(150, SCREEN_HEIGHT)\n"
"\n"
"            # Add the coin to the lists\n"
"            self.coin_list.append(coin)\n"
"\n"
"        # Set the background color\n"
"        arcade.set_background_color(arcade.color.AMAZON)\n"
"\n"
"    def on_draw(self):\n"
"        \"\"\"\n"
"        Render the screen.\n"
"        \"\"\"\n"
"\n"
"        # This command has to happen before we start drawing\n"
"        arcade.start_render()\n"
"\n"
"        # Draw all the sprites.\n"
"        self.coin_list.draw()\n"
"        self.player_list.draw()\n"
"        self.bullet_list.draw()\n"
"\n"
"        # Render the text\n"
"        arcade.draw_text(f\"Score: {self.score}\", 10, 20, arcade.color."
"WHITE, 14)\n"
"\n"
"    def on_mouse_motion(self, x, y, dx, dy):\n"
"        \"\"\"\n"
"        Called whenever the mouse moves.\n"
"        \"\"\"\n"
"        self.player_sprite.center_x = x\n"
"\n"
"    def on_mouse_press(self, x, y, button, modifiers):\n"
"        \"\"\"\n"
"        Called whenever the mouse button is clicked.\n"
"        \"\"\"\n"
"        pass\n"
"\n"
"    def update(self, delta_time):\n"
"        \"\"\" Movement and game logic \"\"\"\n"
"\n"
"        # Call update on all sprites\n"
"        self.coin_list.update()\n"
"        self.bullet_list.update()\n"
"\n"
"\n"
"def main():\n"
"    window = MyGame()\n"
"    window.setup()\n"
"    arcade.run()\n"
"\n"
"\n"
"if __name__ == \"__main__\":\n"
"    main()\n"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:92
msgid "Creating Bullets"
msgstr "Schüsse erstellen"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:93
msgid ""
"We need to create bullets when the user presses the mouse button. We can add "
"an ``on_mouse_press`` method to do something when the user presses the mouse "
"button:"
msgstr ""
"Wir müssen Schüsse erstellen, wenn der Benutzer die Maustaste drückt. Wir "
"können eine ``on_mouse_press``-Methode hinzufügen, um etwas zu tun, wenn der "
"Benutzer die Maustaste drückt:"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:97
msgid ""
"def on_mouse_press(self, x, y, button, modifiers):\n"
"\n"
"    # Create a bullet\n"
"    bullet = arcade.Sprite(\"laserBlue01.png\", SPRITE_SCALING_LASER)\n"
"\n"
"    # Add the bullet to the appropriate list\n"
"    self.bullet_list.append(bullet)"
msgstr ""
"def on_mouse_press(self, x, y, button, modifiers):\n"
"\n"
"    # Create a bullet\n"
"    bullet = arcade.Sprite(\"laserBlue01.png\", SPRITE_SCALING_LASER)\n"
"\n"
"    # Add the bullet to the appropriate list\n"
"    self.bullet_list.append(bullet)"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:107
msgid ""
"This will create a bullet, but the bullet will default to the lower left "
"corner. You can just barely see it."
msgstr ""
"Dadurch wird ein Schuss erstellt, der Schuss befindet sich jedoch "
"standardmäßig in der unteren linken Ecke. Man kann ihn kaum sehen."

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:110
msgid "We can give the bullet a position:"
msgstr "Wir können dem Schuss eine Position zuweisen:"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:112
msgid ""
"def on_mouse_press(self, x, y, button, modifiers):\n"
"\n"
"    # Create a bullet\n"
"    bullet = arcade.Sprite(\"laserBlue01.png\", SPRITE_SCALING_LASER)\n"
"\n"
"    bullet.center_x = x\n"
"    bullet.center_y = y\n"
"\n"
"    # Add the bullet to the appropriate list\n"
"    self.bullet_list.append(bullet)"
msgstr ""
"def on_mouse_press(self, x, y, button, modifiers):\n"
"\n"
"    # Create a bullet\n"
"    bullet = arcade.Sprite(\"laserBlue01.png\", SPRITE_SCALING_LASER)\n"
"\n"
"    bullet.center_x = x\n"
"    bullet.center_y = y\n"
"\n"
"    # Add the bullet to the appropriate list\n"
"    self.bullet_list.append(bullet)"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:126
msgid ""
"But this isn't what we want either. The code above puts the laser where we "
"click the mouse. We want the laser to be where the player is. That's easy:"
msgstr ""
"Aber das wollen wir auch nicht. Der obige Code platziert den Laser dort, wo "
"wir mit der Maus klicken. Wir wollen, dass der Laser dort ist, wo sich die "
"Spielfigur befindet. Das ist einfach:"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:129
msgid ""
"def on_mouse_press(self, x, y, button, modifiers):\n"
"\n"
"    # Create a bullet\n"
"    bullet = arcade.Sprite(\"laserBlue01.png\", SPRITE_SCALING_LASER)\n"
"\n"
"    bullet.center_x = self.player_sprite.center_x\n"
"    bullet.center_y = self.player_sprite.center_y\n"
"\n"
"    # Add the bullet to the appropriate list\n"
"    self.bullet_list.append(bullet)"
msgstr ""
"def on_mouse_press(self, x, y, button, modifiers):\n"
"\n"
"    # Create a bullet\n"
"    bullet = arcade.Sprite(\"laserBlue01.png\", SPRITE_SCALING_LASER)\n"
"\n"
"    bullet.center_x = self.player_sprite.center_x\n"
"    bullet.center_y = self.player_sprite.center_y\n"
"\n"
"    # Add the bullet to the appropriate list\n"
"    self.bullet_list.append(bullet)"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:143
msgid "We can even start the player a bit ABOVE the player:"
msgstr "Wir können den Schuss sogar ein wenig *über* der Spielfigur starten:"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:145
msgid ""
"def on_mouse_press(self, x, y, button, modifiers):\n"
"\n"
"    # Create a bullet\n"
"    bullet = arcade.Sprite(\"laserBlue01.png\", SPRITE_SCALING_LASER)\n"
"\n"
"    bullet.center_x = self.player_sprite.center_x\n"
"    bullet.center_y = self.player_sprite.center_y + 30\n"
"\n"
"    # Add the bullet to the appropriate list\n"
"    self.bullet_list.append(bullet)"
msgstr ""
"def on_mouse_press(self, x, y, button, modifiers):\n"
"\n"
"    # Create a bullet\n"
"    bullet = arcade.Sprite(\"laserBlue01.png\", SPRITE_SCALING_LASER)\n"
"\n"
"    bullet.center_x = self.player_sprite.center_x\n"
"    bullet.center_y = self.player_sprite.center_y + 30\n"
"\n"
"    # Add the bullet to the appropriate list\n"
"    self.bullet_list.append(bullet)"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:159
msgid ""
"We can make the bullet move up using the constant ``BULLET_SPEED`` which we "
"set to 5 at the top of the program:"
msgstr ""
"Wir können den Schuss mit der Konstante ``BULLET_SPEED`` nach oben bewegen, "
"die wir oben im Programm auf 5 setzen:"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:162
msgid ""
"def on_mouse_press(self, x, y, button, modifiers):\n"
"\n"
"    # Create a bullet\n"
"    bullet = arcade.Sprite(\"laserBlue01.png\", SPRITE_SCALING_LASER)\n"
"\n"
"    bullet.center_x = self.player_sprite.center_x\n"
"    bullet.center_y = self.player_sprite.center_y + 30\n"
"    bullet.change_y = BULLET_SPEED\n"
"\n"
"    # Add the bullet to the appropriate list\n"
"    self.bullet_list.append(bullet)"
msgstr ""
"def on_mouse_press(self, x, y, button, modifiers):\n"
"\n"
"    # Create a bullet\n"
"    bullet = arcade.Sprite(\"laserBlue01.png\", SPRITE_SCALING_LASER)\n"
"\n"
"    bullet.center_x = self.player_sprite.center_x\n"
"    bullet.center_y = self.player_sprite.center_y + 30\n"
"    bullet.change_y = BULLET_SPEED\n"
"\n"
"    # Add the bullet to the appropriate list\n"
"    self.bullet_list.append(bullet)"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:177
msgid ""
"We can rotate the bullet so it isn't sideways using the ``angle`` attribute "
"built into the ``Sprite`` class:"
msgstr ""
"Wir können den Schuss so drehen, dass er nicht seitwärts gerichtet ist. "
"Verwende dazu das Attribut ``angle`` der Klasse ``Sprite``:"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:180
msgid ""
"def on_mouse_press(self, x, y, button, modifiers):\n"
"\n"
"    # Create a bullet\n"
"    bullet = arcade.Sprite(\"laserBlue01.png\", SPRITE_SCALING_LASER)\n"
"\n"
"    bullet.center_x = self.player_sprite.center_x\n"
"    bullet.center_y = self.player_sprite.center_y + 30\n"
"    bullet.change_y = BULLET_SPEED\n"
"    bullet.angle = 90\n"
"\n"
"    # Add the bullet to the appropriate list\n"
"    self.bullet_list.append(bullet)"
msgstr ""
"def on_mouse_press(self, x, y, button, modifiers):\n"
"\n"
"    # Create a bullet\n"
"    bullet = arcade.Sprite(\"laserBlue01.png\", SPRITE_SCALING_LASER)\n"
"\n"
"    bullet.center_x = self.player_sprite.center_x\n"
"    bullet.center_y = self.player_sprite.center_y + 30\n"
"    bullet.change_y = BULLET_SPEED\n"
"    bullet.angle = 90\n"
"\n"
"    # Add the bullet to the appropriate list\n"
"    self.bullet_list.append(bullet)"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:198
msgid "Bullet Collisions"
msgstr "Schuss-Kollisionen"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:200
msgid ""
"Now that we have bullets, how do we get them to collide with the coins? We "
"add the following to our applications ``update`` method:"
msgstr ""
"Wie bringen wir die Schüsse dazu, mit den Münzen zusammen zu stoßen? Wir "
"fügen unserer ``update``-Methode Folgendes hinzu:"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:203
msgid ""
"# Loop through each bullet\n"
"for bullet in self.bullet_list:\n"
"\n"
"    # Check this bullet to see if it hit a coin\n"
"    hit_list = arcade.check_for_collision_with_list(bullet, self.coin_list)\n"
"\n"
"    # If it did, get rid of the bullet\n"
"    if len(hit_list) > 0:\n"
"        bullet.kill()\n"
"\n"
"    # For every coin we hit, add to the score and remove the coin\n"
"    for coin in hit_list:\n"
"        coin.kill()\n"
"        self.score += 1\n"
"\n"
"    # If the bullet flies off-screen, remove it.\n"
"    if bullet.bottom > SCREEN_HEIGHT:\n"
"        bullet.kill()"
msgstr ""
"# Loop through each bullet\n"
"for bullet in self.bullet_list:\n"
"\n"
"    # Check this bullet to see if it hit a coin\n"
"    hit_list = arcade.check_for_collision_with_list(bullet, self.coin_list)\n"
"\n"
"    # If it did, get rid of the bullet\n"
"    if len(hit_list) > 0:\n"
"        bullet.kill()\n"
"\n"
"    # For every coin we hit, add to the score and remove the coin\n"
"    for coin in hit_list:\n"
"        coin.kill()\n"
"        self.score += 1\n"
"\n"
"    # If the bullet flies off-screen, remove it.\n"
"    if bullet.bottom > SCREEN_HEIGHT:\n"
"        bullet.kill()"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:224
msgid ""
"We loop through each bullet with a ``for`` loop. Then we check to see if the "
"bullet is hitting any of the coins. If it is, we get rid of the coin. We get "
"rid of the bullet."
msgstr ""
"Wir iterieren mit einer ``for``-Schleife über jeden Schuss. Dabei prüfen "
"wir, ob der Schuss eine der Münzen trifft. Wenn ja, werden wir die Münze "
"los. Wir werden in diesem Fall auch den Schuss los."

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:228
msgid ""
"We also check to see if the bullet flies off the top of the screen. If it "
"does, we get rid of the bullet. This is easy to forget, but if you do, it "
"will cause the computer to slow down because you are tracking thousands of "
"bullets that have long ago left the space we care about."
msgstr ""
"Wir überprüfen auch, ob der Schuss oben am Bildschirm landet. Wenn das der "
"Fall ist, entfernen wir den Schuss. Dies kann man leicht vergessen. Wenn man "
"es aber vergisst, verlangsamt sich der Rechner, da er Tausende von Schüssen "
"verfolgt, die vor langer Zeit den uns interessierenden Bereich verlassen "
"haben."

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:233
msgid "Here's the full example:"
msgstr "Hier ist das vollständige Beispiel:"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:235
msgid "sprites_bullet.py"
msgstr "sprites_bullet.py"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:235
msgid ""
"import random\n"
"import arcade\n"
"\n"
"SPRITE_SCALING_PLAYER = 0.5\n"
"SPRITE_SCALING_COIN = 0.2\n"
"SPRITE_SCALING_LASER = 0.8\n"
"COIN_COUNT = 50\n"
"\n"
"SCREEN_WIDTH = 800\n"
"SCREEN_HEIGHT = 600\n"
"\n"
"BULLET_SPEED = 5\n"
"\n"
"\n"
"class MyGame(arcade.Window):\n"
"    \"\"\" Main application class. \"\"\"\n"
"\n"
"    def __init__(self):\n"
"        \"\"\" Initializer \"\"\"\n"
"        # Call the parent class initializer\n"
"        super().__init__(SCREEN_WIDTH, SCREEN_HEIGHT, \"Sprites and Bullets "
"Demo\")\n"
"\n"
"        # Variables that will hold sprite lists\n"
"        self.player_list = None\n"
"        self.coin_list = None\n"
"        self.bullet_list = None\n"
"\n"
"        # Set up the player info\n"
"        self.player_sprite = None\n"
"        self.score = 0\n"
"\n"
"        # Don't show the mouse cursor\n"
"        self.set_mouse_visible(False)\n"
"\n"
"        arcade.set_background_color(arcade.color.AMAZON)\n"
"\n"
"    def setup(self):\n"
"\n"
"        \"\"\" Set up the game and initialize the variables. \"\"\"\n"
"\n"
"        # Sprite lists\n"
"        self.player_list = arcade.SpriteList()\n"
"        self.coin_list = arcade.SpriteList()\n"
"        self.bullet_list = arcade.SpriteList()\n"
"\n"
"        # Set up the player\n"
"        self.score = 0\n"
"\n"
"        # Image from kenney.nl\n"
"        self.player_sprite = arcade.Sprite(\"character.png\", "
"SPRITE_SCALING_PLAYER)\n"
"        self.player_sprite.center_x = 50\n"
"        self.player_sprite.center_y = 70\n"
"        self.player_list.append(self.player_sprite)\n"
"\n"
"        # Create the coins\n"
"        for i in range(COIN_COUNT):\n"
"\n"
"            # Create the coin instance\n"
"            # Coin image from kenney.nl\n"
"            coin = arcade.Sprite(\"coin_01.png\", SPRITE_SCALING_COIN)\n"
"\n"
"            # Position the coin\n"
"            coin.center_x = random.randrange(SCREEN_WIDTH)\n"
"            coin.center_y = random.randrange(120, SCREEN_HEIGHT)\n"
"\n"
"            # Add the coin to the lists\n"
"            self.coin_list.append(coin)\n"
"\n"
"        # Set the background color\n"
"        arcade.set_background_color(arcade.color.AMAZON)\n"
"\n"
"    def on_draw(self):\n"
"        \"\"\"\n"
"        Render the screen.\n"
"        \"\"\"\n"
"\n"
"        # This command has to happen before we start drawing\n"
"        arcade.start_render()\n"
"\n"
"        # Draw all the sprites.\n"
"        self.coin_list.draw()\n"
"        self.bullet_list.draw()\n"
"        self.player_list.draw()\n"
"\n"
"        # Render the text\n"
"        arcade.draw_text(f\"Score: {self.score}\", 10, 20, arcade.color."
"WHITE, 14)\n"
"\n"
"    def on_mouse_motion(self, x, y, dx, dy):\n"
"        \"\"\"\n"
"        Called whenever the mouse moves.\n"
"        \"\"\"\n"
"        self.player_sprite.center_x = x\n"
"\n"
"    def on_mouse_press(self, x, y, button, modifiers):\n"
"        \"\"\"\n"
"        Called whenever the mouse button is clicked.\n"
"        \"\"\"\n"
"\n"
"        # Create a bullet\n"
"        bullet = arcade.Sprite(\"laserBlue01.png\", SPRITE_SCALING_LASER)\n"
"\n"
"        # The image points to the right, and we want it to point up. So\n"
"        # rotate it.\n"
"        bullet.angle = 90\n"
"\n"
"        # Position the bullet\n"
"        bullet.center_x = self.player_sprite.center_x\n"
"        bullet.bottom = self.player_sprite.top\n"
"\n"
"        # Add the bullet to the appropriate lists\n"
"        self.bullet_list.append(bullet)\n"
"\n"
"    def update(self, delta_time):\n"
"        \"\"\" Movement and game logic \"\"\"\n"
"\n"
"        # Call update on all sprites\n"
"        self.coin_list.update()\n"
"        self.bullet_list.update()\n"
"\n"
"        # Loop through each bullet\n"
"        for bullet in self.bullet_list:\n"
"\n"
"            # Check this bullet to see if it hit a coin\n"
"            hit_list = arcade.check_for_collision_with_list(bullet, self."
"coin_list)\n"
"\n"
"            # If it did, get rid of the bullet\n"
"            if len(hit_list) > 0:\n"
"                bullet.kill()\n"
"\n"
"            # For every coin we hit, add to the score and remove the coin\n"
"            for coin in hit_list:\n"
"                coin.kill()\n"
"                self.score += 1\n"
"\n"
"            # If the bullet flies off-screen, remove it.\n"
"            if bullet.bottom > SCREEN_HEIGHT:\n"
"                bullet.kill()\n"
"\n"
"\n"
"def main():\n"
"    window = MyGame()\n"
"    window.setup()\n"
"    arcade.run()\n"
"\n"
"\n"
"if __name__ == \"__main__\":\n"
"    main()\n"
msgstr ""
"import random\n"
"import arcade\n"
"\n"
"SPRITE_SCALING_PLAYER = 0.5\n"
"SPRITE_SCALING_COIN = 0.2\n"
"SPRITE_SCALING_LASER = 0.8\n"
"COIN_COUNT = 50\n"
"\n"
"SCREEN_WIDTH = 800\n"
"SCREEN_HEIGHT = 600\n"
"\n"
"BULLET_SPEED = 5\n"
"\n"
"\n"
"class MyGame(arcade.Window):\n"
"    \"\"\" Main application class. \"\"\"\n"
"\n"
"    def __init__(self):\n"
"        \"\"\" Initializer \"\"\"\n"
"        # Call the parent class initializer\n"
"        super().__init__(SCREEN_WIDTH, SCREEN_HEIGHT, \"Sprites and Bullets "
"Demo\")\n"
"\n"
"        # Variables that will hold sprite lists\n"
"        self.player_list = None\n"
"        self.coin_list = None\n"
"        self.bullet_list = None\n"
"\n"
"        # Set up the player info\n"
"        self.player_sprite = None\n"
"        self.score = 0\n"
"\n"
"        # Don't show the mouse cursor\n"
"        self.set_mouse_visible(False)\n"
"\n"
"        arcade.set_background_color(arcade.color.AMAZON)\n"
"\n"
"    def setup(self):\n"
"\n"
"        \"\"\" Set up the game and initialize the variables. \"\"\"\n"
"\n"
"        # Sprite lists\n"
"        self.player_list = arcade.SpriteList()\n"
"        self.coin_list = arcade.SpriteList()\n"
"        self.bullet_list = arcade.SpriteList()\n"
"\n"
"        # Set up the player\n"
"        self.score = 0\n"
"\n"
"        # Image from kenney.nl\n"
"        self.player_sprite = arcade.Sprite(\"character.png\", "
"SPRITE_SCALING_PLAYER)\n"
"        self.player_sprite.center_x = 50\n"
"        self.player_sprite.center_y = 70\n"
"        self.player_list.append(self.player_sprite)\n"
"\n"
"        # Create the coins\n"
"        for i in range(COIN_COUNT):\n"
"\n"
"            # Create the coin instance\n"
"            # Coin image from kenney.nl\n"
"            coin = arcade.Sprite(\"coin_01.png\", SPRITE_SCALING_COIN)\n"
"\n"
"            # Position the coin\n"
"            coin.center_x = random.randrange(SCREEN_WIDTH)\n"
"            coin.center_y = random.randrange(120, SCREEN_HEIGHT)\n"
"\n"
"            # Add the coin to the lists\n"
"            self.coin_list.append(coin)\n"
"\n"
"        # Set the background color\n"
"        arcade.set_background_color(arcade.color.AMAZON)\n"
"\n"
"    def on_draw(self):\n"
"        \"\"\"\n"
"        Render the screen.\n"
"        \"\"\"\n"
"\n"
"        # This command has to happen before we start drawing\n"
"        arcade.start_render()\n"
"\n"
"        # Draw all the sprites.\n"
"        self.coin_list.draw()\n"
"        self.bullet_list.draw()\n"
"        self.player_list.draw()\n"
"\n"
"        # Render the text\n"
"        arcade.draw_text(f\"Score: {self.score}\", 10, 20, arcade.color."
"WHITE, 14)\n"
"\n"
"    def on_mouse_motion(self, x, y, dx, dy):\n"
"        \"\"\"\n"
"        Called whenever the mouse moves.\n"
"        \"\"\"\n"
"        self.player_sprite.center_x = x\n"
"\n"
"    def on_mouse_press(self, x, y, button, modifiers):\n"
"        \"\"\"\n"
"        Called whenever the mouse button is clicked.\n"
"        \"\"\"\n"
"\n"
"        # Create a bullet\n"
"        bullet = arcade.Sprite(\"laserBlue01.png\", SPRITE_SCALING_LASER)\n"
"\n"
"        # The image points to the right, and we want it to point up. So\n"
"        # rotate it.\n"
"        bullet.angle = 90\n"
"\n"
"        # Position the bullet\n"
"        bullet.center_x = self.player_sprite.center_x\n"
"        bullet.bottom = self.player_sprite.top\n"
"\n"
"        # Add the bullet to the appropriate lists\n"
"        self.bullet_list.append(bullet)\n"
"\n"
"    def update(self, delta_time):\n"
"        \"\"\" Movement and game logic \"\"\"\n"
"\n"
"        # Call update on all sprites\n"
"        self.coin_list.update()\n"
"        self.bullet_list.update()\n"
"\n"
"        # Loop through each bullet\n"
"        for bullet in self.bullet_list:\n"
"\n"
"            # Check this bullet to see if it hit a coin\n"
"            hit_list = arcade.check_for_collision_with_list(bullet, self."
"coin_list)\n"
"\n"
"            # If it did, get rid of the bullet\n"
"            if len(hit_list) > 0:\n"
"                bullet.kill()\n"
"\n"
"            # For every coin we hit, add to the score and remove the coin\n"
"            for coin in hit_list:\n"
"                coin.kill()\n"
"                self.score += 1\n"
"\n"
"            # If the bullet flies off-screen, remove it.\n"
"            if bullet.bottom > SCREEN_HEIGHT:\n"
"                bullet.kill()\n"
"\n"
"\n"
"def main():\n"
"    window = MyGame()\n"
"    window.setup()\n"
"    arcade.run()\n"
"\n"
"\n"
"if __name__ == \"__main__\":\n"
"    main()\n"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:241
msgid "Other Examples"
msgstr "Andere Beispiele"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:243
msgid ""
"Here are some other examples from `Arcade Academy <http://arcade.academy>`_ "
"and its `Example List <http://arcade.academy/examples/index.html>`_:"
msgstr ""
"Hier sind einige andere Beispiele aus `Arcade Academy <http://arcade."
"academy>`_ und seiner `Liste mit Beispielen <http://arcade.academy/examples/"
"index.html>`_:"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:246
msgid ""
"`Aim bullets with mouse <http://arcade.academy/examples/sprite_bullets_aimed."
"html>`_"
msgstr ""
"`Ziele mit der Maus <http://arcade.academy/examples/sprite_bullets_aimed."
"html>`_"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:247
msgid ""
"`Enemies shoot periodically <http://arcade.academy/examples/"
"sprite_bullets_periodic.html>`_"
msgstr ""
"`Gegner schießen regelmäßig <http://arcade.academy/examples/"
"sprite_bullets_periodic.html>`_"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:248
msgid ""
"`Enemies shoot at random times <http://arcade.academy/examples/"
"sprite_bullets_random.html>`_"
msgstr ""
"`Gegner schießen zu zufälligen Zeiten <http://arcade.academy/examples/"
"sprite_bullets_random.html>`_"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:249
msgid ""
"`Enemies aim at player <http://arcade.academy/examples/"
"sprite_bullets_enemy_aims.html>`_"
msgstr ""
"`Gegner zielen auf die Spielfigur <http://arcade.academy/examples/"
"sprite_bullets_enemy_aims.html>`_"

#: ../../source/chapters/21_shooting_sprites/shooting_sprites.rst:250
msgid "`Explosions <http://arcade.academy/examples/sprite_explosion.html>`_"
msgstr "`Explosionen <http://arcade.academy/examples/sprite_explosion.html>`_"
