# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Paul Vincent Craven
# This file is distributed under the same license as the Arcade package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
# derSuessmann <arcade-book-de@dersuessmann.de>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Arcade Fall 2018\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-03 12:51-0500\n"
"PO-Revision-Date: 2019-07-14 10:31+0200\n"
"Last-Translator: derSuessmann <arcade-book-de@dersuessmann.de>\n"
"Language: de\n"
"Language-Team: German <arcade-book-de@dersuessmann.de>\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/chapters/13_lists/lists.rst:4
msgid "Introduction to Lists"
msgstr "Einführung in Listen"

#: ../../source/chapters/13_lists/lists.rst:7
msgid "Data Types"
msgstr "Datentypen"

#: ../../source/chapters/13_lists/lists.rst:13
msgid "So far this book has shown four types of data:"
msgstr "Bis jetzt gab es in diesem Buch vier Datentypen:"

#: ../../source/chapters/13_lists/lists.rst:15
msgid ""
"String (a string is short for \"string of characters,\" which normal "
"people think of as text.)"
msgstr ""
"Strings (Im Englischen steht String kurz für einen \"string of "
"characters\", also eine Aufeinanderfolge von Zeichen. Im Deutschen sagt "
"man dazu auch Zeichenkette. Viele Programmierer nennen den Datentyp "
"inzwischen String, weil Zeichenkettenvariablen in vielen "
"Programmiersprachen mit `String` oder `string` deklariert werden. Normale"
" Leute denken bei Zeichenketten an Text.)"

#: ../../source/chapters/13_lists/lists.rst:16
msgid "Integer"
msgstr "Integer (Ganze Zahlen)"

#: ../../source/chapters/13_lists/lists.rst:17
msgid "Floating point"
msgstr "Floating Point (Gleitkommazahlen)"

#: ../../source/chapters/13_lists/lists.rst:18
msgid "Boolean"
msgstr "Boolean (Wahrheitswerte)"

#: ../../source/chapters/13_lists/lists.rst:20
msgid ""
"Python can display what type of data a value is with the ``type`` "
"function. For example, what type of data is a ``3``?"
msgstr ""
"Python kann den Datentyp eines Werts mit der Funktion ``type`` anzeigen. "
"Zum Beispiel, welchen Datentyp hat ``3``?"

#: ../../source/chapters/13_lists/lists.rst:23
msgid ""
"# Print the type of data a 3 is:\n"
"print(type(3))"
msgstr ""
"# Print the type of data a 3 is:\n"
"print(type(3))"

#: ../../source/chapters/13_lists/lists.rst:28
msgid "<class 'int'>"
msgstr "<class 'int'>"

#: ../../source/chapters/13_lists/lists.rst:32
msgid ""
"This type function isn't useful for other programming in this book, but "
"it is good to demonstrate the types of data introduced so far."
msgstr ""
"In diesem Buch wird die ``type``-Funktion weniger gebraucht, aber sie "
"hilft die bis jetzt eingeführten Datentypen zu zeigen."

#: ../../source/chapters/13_lists/lists.rst:35
msgid ""
"Here we set x to the four types of data we've used so far, and call the "
"``type`` command to see how Python classifies that data:"
msgstr ""
"Hier setzen wir ``x`` auf die vier Datentypen, die wir bis jetzt "
"verwendet haben, und rufen die ``type``-Funktion auf, um zu sehen wie "
"Python die Daten einteilt:"

#: ../../source/chapters/13_lists/lists.rst:38
msgid ""
"x = 3\n"
"print(\"x =\", x, \"and is of type:\", type(x))\n"
"\n"
"x = 3.145\n"
"print(\"x =\", x, \"and is of type:\", type(x))\n"
"\n"
"x = \"Hi there\"\n"
"print(\"x =\", x, \"and is of type:\", type(x))\n"
"\n"
"x = True\n"
"print(\"x =\", x, \"and is of type:\", type(x))"
msgstr ""
"x = 3\n"
"print(\"x =\", x, \"and is of type:\", type(x))\n"
"\n"
"x = 3.145\n"
"print(\"x =\", x, \"and is of type:\", type(x))\n"
"\n"
"x = \"Hi there\"\n"
"print(\"x =\", x, \"and is of type:\", type(x))\n"
"\n"
"x = True\n"
"print(\"x =\", x, \"and is of type:\", type(x))"

#: ../../source/chapters/13_lists/lists.rst:52
#: ../../source/chapters/13_lists/lists.rst:79
#: ../../source/chapters/13_lists/lists.rst:104
#: ../../source/chapters/13_lists/lists.rst:116
#: ../../source/chapters/13_lists/lists.rst:158
msgid "The output:"
msgstr "Die Ausgabe:"

#: ../../source/chapters/13_lists/lists.rst:54
msgid ""
"x = 3 and is of type: <class 'int'>\n"
"x = 3.145 and is of type: <class 'float'>\n"
"x = Hi there and is of type: <class 'str'>\n"
"x = True and is of type: <class 'bool'>"
msgstr ""
"x = 3 and is of type: <class 'int'>\n"
"x = 3.145 and is of type: <class 'float'>\n"
"x = Hi there and is of type: <class 'str'>\n"
"x = True and is of type: <class 'bool'>"

#: ../../source/chapters/13_lists/lists.rst:63
msgid "More than one coin to collect? Use a list!"
msgstr "Ist mehr als eine Münze einzusammeln? Verwende eine Liste!"

#: ../../source/chapters/13_lists/lists.rst:65
msgid ""
"The two new types of data introduced in this chapter are Lists and "
"Tuples. Lists are similar to another data structure called an array. A "
"list can be resized, but an array can not. A course in data structures "
"will teach you the details, but it that is beyond the scope of this book."
" Try running the following commands in the interactive Python shell and "
"see what is displayed:"
msgstr ""
"Die beiden in diesem Kapitel neu eingeführten Datentypen sind Listen und "
"Tupel. Listen sind ähnlich zu dem, was andere Programmiersprachen Arrays "
"oder Felder nennen. Eine Liste kann in der Größe verändert werden, aber "
"ein Array nicht. Ein Kurs zu Datenstrukturen wird dir die Details "
"beibringen, aber das geht über dieses Buch hinaus. Probiere die folgenden"
" Anweisungen in einer interaktiven Python-Shell aus und sieh dir an, was "
"ausgegeben wird:"

#: ../../source/chapters/13_lists/lists.rst:71
msgid ""
"x = (2, 3, 4, 5)\n"
"print(\"x =\", x, \"and is of type:\", type(x))\n"
"\n"
"x = [2, 3, 4, 5]\n"
"print(\"x =\", x, \"and is of type:\", type(x))"
msgstr ""
"x = (2, 3, 4, 5)\n"
"print(\"x =\", x, \"and is of type:\", type(x))\n"
"\n"
"x = [2, 3, 4, 5]\n"
"print(\"x =\", x, \"and is of type:\", type(x))"

#: ../../source/chapters/13_lists/lists.rst:81
msgid ""
"x = (2, 3, 4, 5) and is of type: <class 'tuple'>\n"
"x = [2, 3, 4, 5] and is of type: <class 'list'>"
msgstr ""
"x = (2, 3, 4, 5) and is of type: <class 'tuple'>\n"
"x = [2, 3, 4, 5] and is of type: <class 'list'>"

#: ../../source/chapters/13_lists/lists.rst:87
msgid "Working With Lists"
msgstr "Arbeiten mit Listen"

#: ../../source/chapters/13_lists/lists.rst:89
msgid ""
"You've created grocery lists, to-do lists, bucket lists, but how do you "
"create a list on the computer?"
msgstr ""
"Du hast Einkaufslisten, Todo-Listen und Listen mit Dingen, die du machen "
"willst, wenn du in Rente geht, geschrieben. Wie erzeugst du eine solche "
"Liste auf dem Rechner?"

#: ../../source/chapters/13_lists/lists.rst:94
#, fuzzy
msgid ".. image:: chapters\\13_lists\\grocery_list.png"
msgstr ".. image:: chapters/13_lists/grocery_list.png"

#: ../../source/chapters/13_lists/lists.rst:94
msgid "Even computers use lists"
msgstr "Sogar Rechner verwenden Listen"

#: ../../source/chapters/13_lists/lists.rst:96
msgid "To create a list and print it out, try the following:"
msgstr "Um eine Liste zu erstellen und auszugeben, versuche folgendes:"

#: ../../source/chapters/13_lists/lists.rst:99
msgid ""
"x = [10, 20]\n"
"print(x)"
msgstr ""
"x = [10, 20]\n"
"print(x)"

#: ../../source/chapters/13_lists/lists.rst:106
msgid "[10, 20]"
msgstr "[10, 20]"

#: ../../source/chapters/13_lists/lists.rst:110
msgid "To print an individual element in a list:"
msgstr "Um ein einzelnes Element einer Liste auszugeben:"

#: ../../source/chapters/13_lists/lists.rst:112
msgid "print(x[0])"
msgstr "print(x[0])"

#: ../../source/chapters/13_lists/lists.rst:118
msgid "10"
msgstr "10"

#: ../../source/chapters/13_lists/lists.rst:122
msgid ""
"This number with the item's location is called the index. Note that list "
"locations start at zero. So a list or array with 10 elements does not "
"have an element in spot [10]. Just spots [0] through [9]. It can be very "
"confusing to create an list of 10 items and then not have an item 10, but"
" most computer languages start counting at 0 rather than 1."
msgstr ""
"Diese Nummer mit der Position des Elements wird Index genannt. Beachte, "
"dass die Positionen bei Null beginnen, deshalb hat eine Liste mit zehn "
"Elementen kein Element an der Postion ``[10]``. Nur die Positionen "
"``[0]`` bis ``[9]``. Es kann sehr irritierend sein, eine Liste mit zehn "
"Elementen zu erzeugen und dann kein Element 10 zu haben, aber die meisten"
" Programmiersprachen beginnen mit der 0 zu zählen statt mit der 1."

#: ../../source/chapters/13_lists/lists.rst:128
msgid ""
"Think of a list as an ice cube tray that holds numbers, as shown in "
"Figure 7.2. The values are stored inside each tray spot, and written on "
"the side of the tray are numbers starting at zero that identify the "
"location of each spot."
msgstr ""
"Denke bei einer Liste an einen Eierkarton, der Zahlen enthält, wie in "
"Abbildung 7.2 gezeigt. Die Werte werden in den einzelnen Vertiefungen "
"gespeichert und auf der Seite des Behälters stehen Zahlen von 0 ab, die "
"die Position der Vertiefungen markieren. "

#: ../../source/chapters/13_lists/lists.rst:134
msgid "Don't mix the index and the value!"
msgstr "Verwechsle nicht den Index und den Wert!"

#: ../../source/chapters/13_lists/lists.rst:136
msgid ""
"Remember, there are two sets of numbers to consider when working with a "
"list of numbers: the position and the value. The position, also known as "
"index, refers to where a value is. The value is the actual number stored "
"at that location. When working with a list or array, make sure to think "
"if you need the location or the value."
msgstr ""
"Erinnere dich, es gibt zwei Mengen von Zahlen, die man beachten muss, "
"wenn man mit Listen arbeitet: die Position und den Wert. Die Position, "
"auch Index genannt, verweist wo der Wert ist. Der Wert ist die "
"tatsächliche Zahl, die an dieser Position gespeichert ist. Stelle sicher,"
" ob du die Position oder den Wert benötigst, wenn du mit Listen oder "
"Arrays arbeitest."

#: ../../source/chapters/13_lists/lists.rst:142
msgid ""
"It is easy to get the value given the location, but it is harder to get "
"the location given the value. Chapter 15 is dedicated to answering how to"
" find the location of a particular value."
msgstr ""
"Es ist einfach, den Wert an einer bestimmten Position zu bekommen. Es ist"
" aber schwerer die Position eines gegebenen Werts zu bekommen. Kapitel 15"
" widmet sich dem Thema, wie man die Position eines bestimmten Werts "
"findet."

#: ../../source/chapters/13_lists/lists.rst:148
#, fuzzy
msgid ".. image:: chapters\\13_lists\\ice_cube_tray.png"
msgstr ".. image:: chapters/13_lists/ice_cube_tray.png"

#: ../../source/chapters/13_lists/lists.rst:148
msgid "Lists are like ice cube trays"
msgstr "Listen sind wie Eiswürfelbehälter"

#: ../../source/chapters/13_lists/lists.rst:150
msgid ""
"You can also access elements from the back-side of an array using "
"negative numbers. (Not all languages support this.) For example:"
msgstr ""
"Du kannst die Elemente am Ende eines Arrays mit negativen Zahlen "
"erreichen. (Nicht alle Programmiersprachen unterstützen das.) Zum "
"Beispiel:"

#: ../../source/chapters/13_lists/lists.rst:153
msgid ""
"x = [10, 20, 30]\n"
"print(x[-1])"
msgstr ""
"x = [10, 20, 30]\n"
"print(x[-1])"

#: ../../source/chapters/13_lists/lists.rst:160
msgid "30"
msgstr "30"

#: ../../source/chapters/13_lists/lists.rst:165
msgid ""
"A program can assign new values to an individual element in a list. In "
"the case below, the first spot at location zero (not one) is assigned the"
" number 22."
msgstr ""
"Ein Programm kann einen neuen Wert an ein einzelnes Element einer Liste "
"zuweisen. Im Fall unten wird an die Position Null (nicht Eins) die Zahl "
"22 zugewiesen."

#: ../../source/chapters/13_lists/lists.rst:169
msgid ""
"x = [1, 2]\n"
"print(x)\n"
"\n"
"x[0] = 22\n"
"print(x)"
msgstr ""
"x = [1, 2]\n"
"print(x)\n"
"\n"
"x[0] = 22\n"
"print(x)"

#: ../../source/chapters/13_lists/lists.rst:177
msgid ""
"[1, 2]\n"
"[22, 2]"
msgstr ""
"[1, 2]\n"
"[22, 2]"

#: ../../source/chapters/13_lists/lists.rst:182
msgid ""
"Also, a program can create a \"tuple.\" This data type works just like a "
"list, but with two differences. First, it is created with parentheses "
"rather than square brackets. Second, it is not possible to change the "
"tuple once created. See below:"
msgstr ""
"Ein Programm kann auch ein Tupel erzeugen. Dieser Datentyp funktioniert "
"genau wie eine Liste, aber mit zwei Unterschieden. Zum einen wird ein "
"Tupel mit runden Klammern statt mit eckigen erzeugt. Zum anderen kann man"
" ein Tupel nicht mehr verändern, wenn es einmal erzeugt wurde. Siehe "
"unten:"

#: ../../source/chapters/13_lists/lists.rst:186
msgid ""
"x = (1, 2)\n"
"print(x)\n"
"\n"
"x[0] = 22\n"
"print(x)"
msgstr ""
"x = (1, 2)\n"
"print(x)\n"
"\n"
"x[0] = 22\n"
"print(x)"

#: ../../source/chapters/13_lists/lists.rst:194
msgid ""
"[1, 2]\n"
"Traceback (most recent call last):\n"
"  File \"<pyshell#18>\", line 4, in <module>\n"
"    x[0] = 22\n"
"TypeError: 'tuple' object does not support item assignment"
msgstr ""
"[1, 2]\n"
"Traceback (most recent call last):\n"
"  File \"<pyshell#18>\", line 4, in <module>\n"
"    x[0] = 22\n"
"TypeError: 'tuple' object does not support item assignment"

#: ../../source/chapters/13_lists/lists.rst:202
msgid ""
"As can be seen from the output of the code above, we can't assign an item"
" in the tuple a new value. Why would we want this limitation? First, the "
"computer can run faster if it knows the value won't change. Second, some "
"lists we don't want to change, such as a list of RGB colors for red. The "
"color red doesn't change, therefore an immutable tuple is a better "
"choice."
msgstr ""
"Wie man aus der Ausgabe des Codes oben sehen kann, können wir einem "
"Element in einem Tupel keinen neuen Wert zuordnen. Warum gibt es diese "
"Einschränkung? Zum einen kann ein Rechner das Programm schneller "
"abarbeiten, wenn er weiß, dass die Werte sich nicht ändern werden. Zum "
"anderen gibt es Listen, bei denen wir nicht möchten, dass sich die Werte "
"ändern können. Eine solche Liste ist die RGB-Farbe für Rot. Die Farbe Rot"
" ändert sich nicht, deshalb ist es besser die RGB-Werte in einem Tupel zu"
" speichern."

#: ../../source/chapters/13_lists/lists.rst:211
msgid "Create an Empty List"
msgstr "Erstelle eine leere Liste"

#: ../../source/chapters/13_lists/lists.rst:213
msgid ""
"Occasionally we need to create a list that is empty. We'll use this in a "
"bit when we start with an empty list and build on it. How do I create an "
"empty list? Easy:"
msgstr ""
"Ab und an müssen wir eine Liste erstellen, die leer ist. Wir werden das "
"in Kürze verwenden und mit einer leeren Liste anfangen und sie dann "
"füllen. Wie erstellen wir eine leere Liste? Einfach: "

#: ../../source/chapters/13_lists/lists.rst:216
msgid "Erstelle eine leere Liste"
msgstr ""

#: ../../source/chapters/13_lists/lists.rst:222
msgid "Iterating (Looping) Through a List"
msgstr "Durch eine Liste iterieren (Wiederholung mit Listenelementen)"

#: ../../source/chapters/13_lists/lists.rst:228
msgid ""
"If a program needs to iterate through each item in a list, such as to "
"print it out, there are two types of for loops that can do this."
msgstr ""
"Wenn ein Programm durch alle Elemente einer Liste iterieren soll, um sie "
"zum Beispiel auszudrucken, dann gibt es zwei Arten von Schleifen, die das"
" können."

#: ../../source/chapters/13_lists/lists.rst:231
msgid ""
"The first method to iterate through each item in a loop is by using a "
"\"for-each\" loop. This type of loop takes a collection of items, and "
"loops the code once per item. It will take a copy of the item and store "
"it in a variable for processing."
msgstr ""
"Die erste Methode ist mit einer \"for-each\"-Schleife (Wiederholung mit "
"Aufzählung der Elemente). Diese Schleifenart nimmt eine Sammlung von "
"Elementen und wiederholt den Code einmal mit jedem Element. Sie wird eine"
" Kopie des Elements in einer Variablen zur Ausführung erstellen."

#: ../../source/chapters/13_lists/lists.rst:236
msgid "The format of the command:"
msgstr "Das Format der Anweisung ist:"

#: ../../source/chapters/13_lists/lists.rst:238
msgid "for item_variable in list_name:"
msgstr "for item_variable in list_name:"

#: ../../source/chapters/13_lists/lists.rst:242
msgid "Here are some examples:"
msgstr "Hier sind ein paar Beispiele:"

#: ../../source/chapters/13_lists/lists.rst:244
msgid ""
"my_list = [101, 20, 10, 50, 60]\n"
"for item in my_list:\n"
"    print(item)"
msgstr ""
"my_list = [101, 20, 10, 50, 60]\n"
"for item in my_list:\n"
"    print(item)"

#: ../../source/chapters/13_lists/lists.rst:251
#: ../../source/chapters/13_lists/lists.rst:303
msgid ""
"101\n"
"20\n"
"10\n"
"50\n"
"60"
msgstr ""
"101\n"
"20\n"
"10\n"
"50\n"
"60"

#: ../../source/chapters/13_lists/lists.rst:259
msgid "Programs can store strings in lists too:"
msgstr "Programme können Zeichenketten auch in Listen speichern:"

#: ../../source/chapters/13_lists/lists.rst:262
msgid ""
"my_list = [\"Spoon\", \"Fork\", \"Knife\"]\n"
"for item in my_list:\n"
"    print(item)"
msgstr ""
"my_list = [\"Spoon\", \"Fork\", \"Knife\"]\n"
"for item in my_list:\n"
"    print(item)"

#: ../../source/chapters/13_lists/lists.rst:268
msgid ""
"Spoon\n"
"Knife\n"
"Fork"
msgstr ""
"Spoon\n"
"Knife\n"
"Fork"

#: ../../source/chapters/13_lists/lists.rst:274
msgid ""
"Lists can even contain other lists. This iterates through each item in "
"the main list, but not in sublists."
msgstr ""
"Listen können andere Listen als Element beinhalten. Der folgende "
"Programmcode iteriert über alle Elemente in der Hauptliste, aber nicht in"
" den Unterlisten."

#: ../../source/chapters/13_lists/lists.rst:277
msgid ""
"my_list = [[2, 3], [4, 3], [6, 7]]\n"
"for item in my_list:\n"
"    print(item)"
msgstr ""
"my_list = [[2, 3], [4, 3], [6, 7]]\n"
"for item in my_list:\n"
"    print(item)"

#: ../../source/chapters/13_lists/lists.rst:283
msgid ""
"[2,3]\n"
"[4,3]\n"
"[6,7]"
msgstr ""
"[2,3]\n"
"[4,3]\n"
"[6,7]"

#: ../../source/chapters/13_lists/lists.rst:289
msgid ""
"The other way to iterate through a list is to use an index variable and "
"directly access the list rather than through a copy of each item. To use "
"an index variable, the program counts from 0 up to the length of the "
"list. If there are ten elements, the loop must go from 0 to 9 for a total"
" of ten elements."
msgstr ""
"Der andere Weg durch eine Liste zu iterieren ist, eine Indexvariable zu "
"verwenden und direkt auf die List zuzugreifen anstatt eine Kopie jedes "
"Elements zu erstellen. Um eine Indexvariable zu verwenden, zählt das "
"Programm von 0 bis zur Länge der Liste. Wenn es zehn Elemente gibt, muss "
"die Schleife von 0 bis 9 für insgesamt zehn Elemente gehen."

#: ../../source/chapters/13_lists/lists.rst:294
msgid ""
"The length of a list may be found by using the len function. Combining "
"that with the range function allows the program to loop through the "
"entire list."
msgstr ""
"Die Länge einer Liste kann man mit der ``len``-Funktion bestimmen. "
"Kombiniert mit der ``range``-Funktion erlaubt das, über alle Elemente der"
" Liste zu iterieren."

#: ../../source/chapters/13_lists/lists.rst:297
msgid ""
"my_list = [101, 20, 10, 50, 60]\n"
"for index in range(len(my_list)):\n"
"    print(my_list[index])"
msgstr ""
"my_list = [101, 20, 10, 50, 60]\n"
"for index in range(len(my_list)):\n"
"    print(my_list[index])"

#: ../../source/chapters/13_lists/lists.rst:311
msgid ""
"This method is more complex, but is also more powerful. Because we are "
"working directly with the list elements, rather than a copy, the list can"
" be modified. The for-each loop does not allow modification of the "
"original list."
msgstr ""
"Diese Methode ist komplexer, aber auch mächtiger. Weil wir direkt mit den"
" Listenelementen arbeiten statt einer Kopie, kann die Liste verändert "
"werden. Die Wiederholung mit Aufzählung der Elemente (for-each-Schleife) "
"erlaubt keine Veränderung der originalen Liste."

#: ../../source/chapters/13_lists/lists.rst:316
msgid "Looping With Both An Index And Element"
msgstr "Schleife mit Index und Element"

#: ../../source/chapters/13_lists/lists.rst:318
msgid ""
"If you want both the index, like a ``for i in range`` gives you, and the "
"element, like a ``for item in my_list`` gives you, the proper Python-ic "
"way to use the ``enumerate`` function like this:"
msgstr ""
"Wenn du sowohl den Index, wie in ``for i in range``, und das Element, wie"
" in ``for item in my_list``, haben willst, ist der richtige Pythoneske "
"Weg, die ``enumerate``-Funktion wie folgt zu verwenden :"

#: ../../source/chapters/13_lists/lists.rst:321
msgid ""
"for index, value in enumerate(my_list):\n"
"    print(index, value)"
msgstr ""
"for index, value in enumerate(my_list):\n"
"    print(index, value)"

#: ../../source/chapters/13_lists/lists.rst:329
msgid "Adding to a List"
msgstr "An eine Liste anhängen"

#: ../../source/chapters/13_lists/lists.rst:331
msgid ""
"New items may be added to a list (but not a tuple) by using the append "
"command. For example:"
msgstr ""
"Neue Elemente können an eine Liste mit der ``append``-Anweisung angefügt "
"werden (aber nicht an ein Tupel). Zum Beispiel:"

#: ../../source/chapters/13_lists/lists.rst:335
msgid ""
"my_list = [2, 4, 5, 6]\n"
"print(my_list)\n"
"my_list.append(9)\n"
"print(my_list)"
msgstr ""
"my_list = [2, 4, 5, 6]\n"
"print(my_list)\n"
"my_list.append(9)\n"
"print(my_list)"

#: ../../source/chapters/13_lists/lists.rst:342
msgid ""
"[2, 4, 5, 6]\n"
"[2, 4, 5, 6, 9]"
msgstr ""
"[2, 4, 5, 6]\n"
"[2, 4, 5, 6, 9]"

#: ../../source/chapters/13_lists/lists.rst:351
msgid ""
"Side note: If performance while appending is a concern, it is very "
"important to understand how a list is being implemented. For example, if "
"a list is implemented as an *array data type*, then appending an item to "
"the list is a lot like adding a new egg to a full egg carton. A new egg "
"carton must be built with thirteen spots. Then twelve eggs are moved "
"over. Then the thirteenth egg is added. Finally the old egg carton is "
"recycled. Because this can happen behind the scenes in a function, "
"programmers may forget this and let the computer do all the work. It "
"would be more efficient to simply tell the computer to make an egg carton"
" with enough spots to begin with. Thankfully, Python does not implement a"
" list as an array data type. But it is important to pay attention to your"
" next semester data structures class and learn how all of this works."
msgstr ""
"Randnotiz: Wenn die Performanz beim Anfügen entscheidend ist, dann ist es"
" wichtig zu verstehen, wie Listen implementiert werden. Wenn zum Beispiel"
" die Liste als ein *Array-Typ* implementiert ist, dann ist das Anfügen, "
"wie ein Ei in einen vollen Eierkarton zu packen. Es muss erst ein neuer "
"Karton mit dreizehn Plätzen erstellt werden. Dann werden die zwölf Eier "
"in den neuen Karton umgepackt und das dreizehnte Ei dazu gepackt. Zum "
"Schluss wird noch der alte Eierkarton recycelt. Weil dies alles hinter "
"den Kulissen in einer Funktion durchgeführt wird, können Programmierer "
"dies vergessen und lassen den Rechner die ganze Arbeit machen. Es wäre "
"effizienter, den Rechner von Anfang an anzuweisen, einen Karton mit genug"
" Plätzen zu erstellen. Glücklicherweise implementiert Python Listen nicht"
" als Array-Typ, aber es ist wichtig im Datenstrukturen-Kurs im nächsten "
"Semester aufzupassen und zu lernen, wie dies alles funktioniert."

#: ../../source/chapters/13_lists/lists.rst:363
msgid ""
"To create a list from scratch, it is necessary to create a blank list and"
" then use the ``append`` function to build it based upon user input:"
msgstr ""
"Um eine Liste von Null an zu erstellen, ist es notwendig, eine leere "
"Liste zu erstellen und dann die Liste mit der ``append``-Funktion "
"basierend auf den Benutzereingaben aufzubauen:"

#: ../../source/chapters/13_lists/lists.rst:367
msgid "Creating a list of numbers from user input"
msgstr "Erstellen einer Liste mit Zahlen von Benutzereingaben"

#: ../../source/chapters/13_lists/lists.rst:367
msgid ""
"# Create an empty list\n"
"my_list = []\n"
"\n"
"for i in range(5):\n"
"    user_input = input( \"Enter an integer: \")\n"
"    user_input = int(user_input)\n"
"    my_list.append(user_input)\n"
"    print(my_list)"
msgstr ""
"# Create an empty list\n"
"my_list = []\n"
"\n"
"for i in range(5):\n"
"    user_input = input( \"Enter an integer: \")\n"
"    user_input = int(user_input)\n"
"    my_list.append(user_input)\n"
"    print(my_list)"

#: ../../source/chapters/13_lists/lists.rst:379
msgid ""
"Enter an integer: 4\n"
"[4]\n"
"Enter an integer: 5\n"
"[4, 5]\n"
"Enter an integer: 3\n"
"[4, 5, 3]\n"
"Enter an integer: 1\n"
"[4, 5, 3, 1]\n"
"Enter an integer: 8\n"
"[4, 5, 3, 1, 8]"
msgstr ""
"Enter an integer: 4\n"
"[4]\n"
"Enter an integer: 5\n"
"[4, 5]\n"
"Enter an integer: 3\n"
"[4, 5, 3]\n"
"Enter an integer: 1\n"
"[4, 5, 3, 1]\n"
"Enter an integer: 8\n"
"[4, 5, 3, 1, 8]"

#: ../../source/chapters/13_lists/lists.rst:392
msgid ""
"If a program needs to create an array of a specific length, all with the "
"same value, a simple trick is to use the following code:"
msgstr ""
"Wenn ein Programm ein Array einer festgelegten Länge, alle Elemente mit "
"demselben Wert, erstellen soll, dann hilft der folgende Trick:"

#: ../../source/chapters/13_lists/lists.rst:395
msgid "Create an array with 100 zeros"
msgstr "Erstelle ein Array mit 100 Nullen"

#: ../../source/chapters/13_lists/lists.rst:395
#, fuzzy
msgid ""
"# Erstelle ein Array mit 100 Nullen\n"
"my_list = [0] * 100"
msgstr ""
"# Erstelle ein Array mit 100 Nullen\n"
"my_list = [0] * 100"

#: ../../source/chapters/13_lists/lists.rst:403
msgid "Summing or Modifying a List"
msgstr "Summieren oder Modifizieren einer Liste"

#: ../../source/chapters/13_lists/lists.rst:409
msgid ""
"Creating a running total of an array is a common operation. Here's how it"
" is done:"
msgstr ""
"Die Gesamtsumme eines Array zu berechnen, ist eine häufige Operation. "
"Hier ist, wie es gemacht wird:"

#: ../../source/chapters/13_lists/lists.rst:411
msgid "Summing the values in a list v1"
msgstr "Summieren der Werte in einer Liste v1"

#: ../../source/chapters/13_lists/lists.rst:411
msgid ""
"# Copy of the array to sum\n"
"my_list = [5, 76, 8, 5, 3, 3, 56, 5, 23]\n"
"\n"
"# Initial sum should be zero\n"
"list_total = 0\n"
"\n"
"# Loop from 0 up to the number of elements\n"
"# in the array:\n"
"for index in range(len(my_list)):\n"
"    # Add element 0, next 1, then 2, etc.\n"
"    list_total += my_list[index]\n"
"\n"
"# Print the result\n"
"print(list_total)"
msgstr ""
"# Copy of the array to sum\n"
"my_list = [5, 76, 8, 5, 3, 3, 56, 5, 23]\n"
"\n"
"# Initial sum should be zero\n"
"list_total = 0\n"
"\n"
"# Loop from 0 up to the number of elements\n"
"# in the array:\n"
"for index in range(len(my_list)):\n"
"    # Add element 0, next 1, then 2, etc.\n"
"    list_total += my_list[index]\n"
"\n"
"# Print the result\n"
"print(list_total)"

#: ../../source/chapters/13_lists/lists.rst:430
msgid ""
"The same thing can be done by using a ``for`` loop to iterate the array, "
"rather than count through a range:"
msgstr ""
"Das Gleiche kann mit einer ``for``-Schleife, die über das Array iteriert "
"statt durch den Bereich zu zählen, erreicht werden:"

#: ../../source/chapters/13_lists/lists.rst:433
msgid "Summing the values in a list v2"
msgstr "Summieren der Werte in einer Liste v2"

#: ../../source/chapters/13_lists/lists.rst:433
msgid ""
"# Copy of the array to sum\n"
"my_list = [5, 76, 8, 5, 3, 3, 56, 5, 23]\n"
"\n"
"# Initial sum should be zero\n"
"list_total = 0\n"
"\n"
"# Loop through array, copying each item in the array into\n"
"# the variable named item.\n"
"for item in my_list:\n"
"    # Add each item\n"
"    list_total += item\n"
"\n"
"# Print the result\n"
"print(list_total)"
msgstr ""
"# Copy of the array to sum\n"
"my_list = [5, 76, 8, 5, 3, 3, 56, 5, 23]\n"
"\n"
"# Initial sum should be zero\n"
"list_total = 0\n"
"\n"
"# Loop through array, copying each item in the array into\n"
"# the variable named item.\n"
"for item in my_list:\n"
"    # Add each item\n"
"    list_total += item\n"
"\n"
"# Print the result\n"
"print(list_total)"

#: ../../source/chapters/13_lists/lists.rst:452
msgid "Numbers in an array can also be changed by using a ``for`` loop:"
msgstr ""
"Zahlen in einem Array können auch mit einer ``for``-Schleife verändert "
"werden:"

#: ../../source/chapters/13_lists/lists.rst:454
msgid "Doubling all the numbers in a list"
msgstr "Verdopplung aller Zahlen in einer Liste"

#: ../../source/chapters/13_lists/lists.rst:454
msgid ""
"# Copy of the array to modify\n"
"my_list = [5, 76, 8, 5, 3, 3, 56, 5, 23]\n"
"\n"
"# Loop from 0 up to the number of elements\n"
"# in the array:\n"
"for index in range(len(my_list)):\n"
"    # Modify the element by doubling it\n"
"    my_list[index] = my_list[index] * 2\n"
"\n"
"# Print the result\n"
"print(my_list)"
msgstr ""
"# Copy of the array to modify\n"
"my_list = [5, 76, 8, 5, 3, 3, 56, 5, 23]\n"
"\n"
"# Loop from 0 up to the number of elements\n"
"# in the array:\n"
"for index in range(len(my_list)):\n"
"    # Modify the element by doubling it\n"
"    my_list[index] = my_list[index] * 2\n"
"\n"
"# Print the result\n"
"print(my_list)"

#: ../../source/chapters/13_lists/lists.rst:470
msgid ""
"However version 2 does not work at doubling the values in an array. Why? "
"Because ``item`` is a *copy* of an element in the array. The code below "
"doubles the copy, not the original array element."
msgstr ""
"Die Version 2 verdoppelt allerdings nicht die Werte in einem Array. "
"Warum? Weil ``item`` eine *Kopie* eines Elements im Array ist. Der Code "
"unten verdoppelt die Kopie, nicht das originale Array-Element. "

#: ../../source/chapters/13_lists/lists.rst:474
msgid "Bad code that doesn't double all the numbers in a list"
msgstr "Schlechter Code, der nicht alle Werte der Zahlen in einer Liste verdoppelt"

#: ../../source/chapters/13_lists/lists.rst:474
msgid ""
"# Copy of the array to modify\n"
"my_list = [5, 76, 8, 5, 3, 3, 56, 5, 23]\n"
"\n"
"# Loop through each element in myArray\n"
"for item in my_list:\n"
"    # This doubles item, but does not change the array\n"
"    # because item is a copy of a single element.\n"
"    item = item * 2\n"
"\n"
"# Print the result\n"
"print(my_list)"
msgstr ""
"# Copy of the array to modify\n"
"my_list = [5, 76, 8, 5, 3, 3, 56, 5, 23]\n"
"\n"
"# Loop through each element in myArray\n"
"for item in my_list:\n"
"    # This doubles item, but does not change the array\n"
"    # because item is a copy of a single element.\n"
"    item = item * 2\n"
"\n"
"# Print the result\n"
"print(my_list)"

#: ../../source/chapters/13_lists/lists.rst:491
msgid "Slicing Strings"
msgstr "Zeichenketten-Aufschnitt"

#: ../../source/chapters/13_lists/lists.rst:497
msgid ""
"Strings are actually lists of characters. They can be treated like lists "
"with each letter a separate item. Run the following code with both "
"versions of x:"
msgstr ""
"Zeichenketten sind tatsächlich Listen von Zeichen. Sie können genau wie "
"Listen, mit jedem Zeichen als separates Element, behandelt werden. Führe "
"den folgenden Code mit beiden Versionen von ``x`` aus:"

#: ../../source/chapters/13_lists/lists.rst:500
msgid "Accessing a string as a list"
msgstr "Auf Strings als Liste zugreifen"

#: ../../source/chapters/13_lists/lists.rst:500
msgid ""
"x = \"This is a sample string\"\n"
"#x = \"0123456789\"\n"
"\n"
"print(\"x=\", x)\n"
"\n"
"# Accessing the first character (\"T\")\n"
"print(\"x[0]=\", x[0])\n"
"\n"
"# Accessing the second character (\"h\")\n"
"print(\"x[1]=\", x[1])\n"
"\n"
"# Accessing from the right side (\"g\")\n"
"print(\"x[-1]=\", x[-1])\n"
"\n"
"# Access 0-5 (\"This \")\n"
"print(\"x[:6]=\", x[:6])\n"
"# Access 6 to the end (\"is a sample string\")\n"
"print(\"x[6:]=\", x[6:])\n"
"# Access 6-8\n"
"print(\"x[6:9]=\", x[6:9])"
msgstr ""
"x = \"This is a sample string\"\n"
"#x = \"0123456789\"\n"
"\n"
"print(\"x=\", x)\n"
"\n"
"# Accessing the first character (\"T\")\n"
"print(\"x[0]=\", x[0])\n"
"\n"
"# Accessing the second character (\"h\")\n"
"print(\"x[1]=\", x[1])\n"
"\n"
"# Accessing from the right side (\"g\")\n"
"print(\"x[-1]=\", x[-1])\n"
"\n"
"# Access 0-5 (\"This \")\n"
"print(\"x[:6]=\", x[:6])\n"
"# Access 6 to the end (\"is a sample string\")\n"
"print(\"x[6:]=\", x[6:])\n"
"# Access 6-8\n"
"print(\"x[6:9]=\", x[6:9])"

#: ../../source/chapters/13_lists/lists.rst:525
msgid ""
"Strings in Python may be used with some of the mathematical operators. "
"Try the following code and see what Python does:"
msgstr ""
"Strings in Python können mit einigen mathematischen Operatoren verknüpft "
"werden. Probiere den folgenden Code aus und sieh dir an, was Python "
"macht:"

#: ../../source/chapters/13_lists/lists.rst:528
msgid "Adding and multiplying strings"
msgstr "Addition und Multiplikation von Strings"

#: ../../source/chapters/13_lists/lists.rst:528
msgid ""
"a = \"Hi\"\n"
"b = \"There\"\n"
"c = \"!\"\n"
"print(a + b)\n"
"print(a + b + c)\n"
"print(3 * a)\n"
"print(a * 3)\n"
"print((a * 2) + (b * 2))"
msgstr ""
"a = \"Hi\"\n"
"b = \"There\"\n"
"c = \"!\"\n"
"print(a + b)\n"
"print(a + b + c)\n"
"print(3 * a)\n"
"print(a * 3)\n"
"print((a * 2) + (b * 2))"

#: ../../source/chapters/13_lists/lists.rst:541
msgid ""
"It is possible to get a length of a string. It is also possible to do "
"this with any type of array."
msgstr ""
"Man kann die Länge eines Strings bestimmen. Dies ist auch mit jedem "
"beliebigen Typ von Array möglich."

#: ../../source/chapters/13_lists/lists.rst:544
msgid "Getting the length of a string or list"
msgstr "Die Länge eines Strings oder einer Liste bestimmen"

#: ../../source/chapters/13_lists/lists.rst:544
msgid ""
"a = \"Hi There\"\n"
"print(len(a))\n"
"\n"
"b = [3, 4, 5, 6, 76, 4, 3, 3]\n"
"print(len(b))"
msgstr ""
"a = \"Hi There\"\n"
"print(len(a))\n"
"\n"
"b = [3, 4, 5, 6, 76, 4, 3, 3]\n"
"print(len(b))"

#: ../../source/chapters/13_lists/lists.rst:554
msgid ""
"Since a string is an array, a program can iterate through each character "
"element just like an array:"
msgstr ""
"Da ein String ein Array ist, kann ein Programm über jedes Zeichen "
"iterieren genau wie bei einem Array:"

#: ../../source/chapters/13_lists/lists.rst:557
msgid ""
"for character in \"This is a test.\":\n"
"    print(character)"
msgstr ""
"for character in \"This is a test.\":\n"
"    print(character)"

#: ../../source/chapters/13_lists/lists.rst:562
msgid "Exercise: Starting with the following code:"
msgstr "Übung: Beginne mit dem folgenden Code:"

#: ../../source/chapters/13_lists/lists.rst:564
msgid ""
"months = \"JanFebMarAprMayJunJulAugSepOctNovDec\"\n"
"n = int(input(\"Enter a month number: \"))"
msgstr ""
"months = \"JanFebMarAprMayJunJulAugSepOctNovDec\"\n"
"n = int(input(\"Enter a month number: \"))"

#: ../../source/chapters/13_lists/lists.rst:570
msgid ""
"Print the three month abbreviation for the month number that the user "
"enters. (Calculate the start position in the string, then use the info we"
" just learned to print out the correct substring.)"
msgstr ""
"Gib die Abkürzung für die Monatsnummer aus, die der Benutzer eingibt. "
"(Berechne die Anfangsposition im String, verwende dann die Information, "
"die wir gerade gelernt haben, um den korrekten Teilstring auszugeben.)"

#: ../../source/chapters/13_lists/lists.rst:575
msgid "Secret Codes"
msgstr "Geheimcodes"

#: ../../source/chapters/13_lists/lists.rst:577
msgid "This code prints out every letter of a string individually:"
msgstr "Dieser Code gibt jedes Zeichen eines Strings einzeln aus:"

#: ../../source/chapters/13_lists/lists.rst:579
msgid ""
"plain_text = \"This is a test. ABC abc\"\n"
"\n"
"for c in plain_text:\n"
"    print(c, end=\" \")"
msgstr ""
"plain_text = \"This is a test. ABC abc\"\n"
"\n"
"for c in plain_text:\n"
"    print(c, end=\" \")"

#: ../../source/chapters/13_lists/lists.rst:591
msgid ""
"Computers do not actually store letters of a string in memory; computers "
"store a series of numbers. Each number represents a letter. The system "
"that computers use to translate numbers to letters is called *Unicode*. "
"The full name for the encoding is Universal Character Set Transformation "
"Format 8-bit, usually abbreviated ``UTF-8``."
msgstr ""
"Rechner speichern nicht wirklich Zeichen eines Strings im Speicher. "
"Rechner speichern eine Folge von Zahlen. Jede Zahl repräsentiert einen "
"Buchstaben. Ein System, das Rechner verwenden, um Zahlen in Buchstaben um"
" zu wandeln, wird *Unicode* genannt. Der ganze Name ist \"Universal "
"Character Set Transformation Format 8-Bit\", üblicherweise als ``UTF-8`` "
"abgekürzt."

#: ../../source/chapters/13_lists/lists.rst:597
msgid ""
"The Unicode chart covers the Western alphabet using the numbers 0-127. "
"Each Western letter is represented by one byte of memory. Other "
"alphabets, like Cyrillic, can take multiple bytes to represent each "
"letter. A partial copy of the Unicode chart is below:"
msgstr ""
"Diese Unicode-Tabelle deckt das westliche Alphabet mit den Zahlen 0 - 127"
" ab. Jeder westliche Buchstabe wird mit einem Byte im Speicher "
"repräsentiert. Umlaute gehören nicht dazu. Sie benötigen wie andere "
"Alphabete (zum Beispiel kyrillisch) mehrere Bytes zur Repräsentation "
"jedes Zeichens. Ein Teil der Unicode-Tabelle steht unten:"

#: ../../source/chapters/13_lists/lists.rst:603
msgid "Value"
msgstr "Wert"

#: ../../source/chapters/13_lists/lists.rst:603
msgid "Character"
msgstr "Zeichen"

#: ../../source/chapters/13_lists/lists.rst:605
msgid "40"
msgstr "40"

#: ../../source/chapters/13_lists/lists.rst:605
msgid "("
msgstr "("

#: ../../source/chapters/13_lists/lists.rst:605
msgid "61"
msgstr "61"

#: ../../source/chapters/13_lists/lists.rst:605
msgid "="
msgstr "="

#: ../../source/chapters/13_lists/lists.rst:605
msgid "82"
msgstr "82"

#: ../../source/chapters/13_lists/lists.rst:605
msgid "R"
msgstr "R"

#: ../../source/chapters/13_lists/lists.rst:605
msgid "103"
msgstr "103"

#: ../../source/chapters/13_lists/lists.rst:605
msgid "g"
msgstr "g"

#: ../../source/chapters/13_lists/lists.rst:607
msgid "41"
msgstr "41"

#: ../../source/chapters/13_lists/lists.rst:607
msgid ")"
msgstr ")"

#: ../../source/chapters/13_lists/lists.rst:607
msgid "62"
msgstr "62"

#: ../../source/chapters/13_lists/lists.rst:607
msgid ">"
msgstr ">"

#: ../../source/chapters/13_lists/lists.rst:607
msgid "83"
msgstr "83"

#: ../../source/chapters/13_lists/lists.rst:607
msgid "S"
msgstr "S"

#: ../../source/chapters/13_lists/lists.rst:607
msgid "104"
msgstr "104"

#: ../../source/chapters/13_lists/lists.rst:607
msgid "h"
msgstr "h"

#: ../../source/chapters/13_lists/lists.rst:609
msgid "42"
msgstr "42"

#: ../../source/chapters/13_lists/lists.rst:609
msgid "63"
msgstr "63"

#: ../../source/chapters/13_lists/lists.rst:609
msgid "?"
msgstr "?"

#: ../../source/chapters/13_lists/lists.rst:609
msgid "84"
msgstr "84"

#: ../../source/chapters/13_lists/lists.rst:609
msgid "T"
msgstr "T"

#: ../../source/chapters/13_lists/lists.rst:609
msgid "105"
msgstr "105"

#: ../../source/chapters/13_lists/lists.rst:609
msgid "i"
msgstr "i"

#: ../../source/chapters/13_lists/lists.rst:611
msgid "43"
msgstr "43"

#: ../../source/chapters/13_lists/lists.rst:611
msgid "64"
msgstr "64"

#: ../../source/chapters/13_lists/lists.rst:611
msgid "@"
msgstr "@"

#: ../../source/chapters/13_lists/lists.rst:611
msgid "85"
msgstr "85"

#: ../../source/chapters/13_lists/lists.rst:611
msgid "U"
msgstr "U"

#: ../../source/chapters/13_lists/lists.rst:611
msgid "106"
msgstr "106"

#: ../../source/chapters/13_lists/lists.rst:611
msgid "j"
msgstr "j"

#: ../../source/chapters/13_lists/lists.rst:613
msgid "44"
msgstr "44"

#: ../../source/chapters/13_lists/lists.rst:613
msgid ","
msgstr ","

#: ../../source/chapters/13_lists/lists.rst:613
msgid "65"
msgstr "65"

#: ../../source/chapters/13_lists/lists.rst:613
msgid "A"
msgstr "A"

#: ../../source/chapters/13_lists/lists.rst:613
msgid "86"
msgstr "86"

#: ../../source/chapters/13_lists/lists.rst:613
msgid "V"
msgstr "V"

#: ../../source/chapters/13_lists/lists.rst:613
msgid "107"
msgstr "107"

#: ../../source/chapters/13_lists/lists.rst:613
msgid "k"
msgstr "k"

#: ../../source/chapters/13_lists/lists.rst:615
msgid "45"
msgstr "45"

#: ../../source/chapters/13_lists/lists.rst:615
msgid "66"
msgstr "66"

#: ../../source/chapters/13_lists/lists.rst:615
msgid "B"
msgstr "B"

#: ../../source/chapters/13_lists/lists.rst:615
msgid "87"
msgstr "87"

#: ../../source/chapters/13_lists/lists.rst:615
msgid "W"
msgstr "W"

#: ../../source/chapters/13_lists/lists.rst:615
msgid "108"
msgstr "108"

#: ../../source/chapters/13_lists/lists.rst:615
msgid "l"
msgstr "l"

#: ../../source/chapters/13_lists/lists.rst:617
msgid "46"
msgstr "46"

#: ../../source/chapters/13_lists/lists.rst:617
msgid "."
msgstr "."

#: ../../source/chapters/13_lists/lists.rst:617
msgid "67"
msgstr "67"

#: ../../source/chapters/13_lists/lists.rst:617
msgid "C"
msgstr "C"

#: ../../source/chapters/13_lists/lists.rst:617
msgid "88"
msgstr "88"

#: ../../source/chapters/13_lists/lists.rst:617
msgid "X"
msgstr "X"

#: ../../source/chapters/13_lists/lists.rst:617
msgid "109"
msgstr "109"

#: ../../source/chapters/13_lists/lists.rst:617
msgid "m"
msgstr "m"

#: ../../source/chapters/13_lists/lists.rst:619
msgid "47"
msgstr "47"

#: ../../source/chapters/13_lists/lists.rst:619
msgid "/"
msgstr "/"

#: ../../source/chapters/13_lists/lists.rst:619
msgid "68"
msgstr "68"

#: ../../source/chapters/13_lists/lists.rst:619
msgid "D"
msgstr "D"

#: ../../source/chapters/13_lists/lists.rst:619
msgid "89"
msgstr "89"

#: ../../source/chapters/13_lists/lists.rst:619
msgid "Y"
msgstr "Y"

#: ../../source/chapters/13_lists/lists.rst:619
msgid "110"
msgstr "110"

#: ../../source/chapters/13_lists/lists.rst:619
msgid "n"
msgstr "n"

#: ../../source/chapters/13_lists/lists.rst:621
msgid "48"
msgstr "48"

#: ../../source/chapters/13_lists/lists.rst:621
msgid "0"
msgstr "0"

#: ../../source/chapters/13_lists/lists.rst:621
msgid "69"
msgstr "69"

#: ../../source/chapters/13_lists/lists.rst:621
msgid "E"
msgstr "E"

#: ../../source/chapters/13_lists/lists.rst:621
msgid "90"
msgstr "90"

#: ../../source/chapters/13_lists/lists.rst:621
msgid "Z"
msgstr "Z"

#: ../../source/chapters/13_lists/lists.rst:621
msgid "111"
msgstr "111"

#: ../../source/chapters/13_lists/lists.rst:621
msgid "o"
msgstr "o"

#: ../../source/chapters/13_lists/lists.rst:623
msgid "49"
msgstr "49"

#: ../../source/chapters/13_lists/lists.rst:623
msgid "1"
msgstr "1"

#: ../../source/chapters/13_lists/lists.rst:623
msgid "70"
msgstr "70"

#: ../../source/chapters/13_lists/lists.rst:623
msgid "F"
msgstr "F"

#: ../../source/chapters/13_lists/lists.rst:623
msgid "91"
msgstr "91"

#: ../../source/chapters/13_lists/lists.rst:623
msgid "["
msgstr "["

#: ../../source/chapters/13_lists/lists.rst:623
msgid "112"
msgstr "112"

#: ../../source/chapters/13_lists/lists.rst:623
msgid "p"
msgstr "p"

#: ../../source/chapters/13_lists/lists.rst:625
msgid "50"
msgstr "50"

#: ../../source/chapters/13_lists/lists.rst:625
msgid "2"
msgstr "2"

#: ../../source/chapters/13_lists/lists.rst:625
msgid "71"
msgstr "71"

#: ../../source/chapters/13_lists/lists.rst:625
msgid "G"
msgstr "G"

#: ../../source/chapters/13_lists/lists.rst:625
msgid "92"
msgstr "92"

#: ../../source/chapters/13_lists/lists.rst:625
msgid "\\"
msgstr "\\"

#: ../../source/chapters/13_lists/lists.rst:625
msgid "113"
msgstr "113"

#: ../../source/chapters/13_lists/lists.rst:625
msgid "q"
msgstr "q"

#: ../../source/chapters/13_lists/lists.rst:627
msgid "51"
msgstr "51"

#: ../../source/chapters/13_lists/lists.rst:627
msgid "3"
msgstr "3"

#: ../../source/chapters/13_lists/lists.rst:627
msgid "72"
msgstr "72"

#: ../../source/chapters/13_lists/lists.rst:627
msgid "H"
msgstr "H"

#: ../../source/chapters/13_lists/lists.rst:627
msgid "93"
msgstr "93"

#: ../../source/chapters/13_lists/lists.rst:627
msgid "]"
msgstr "]"

#: ../../source/chapters/13_lists/lists.rst:627
msgid "114"
msgstr "114"

#: ../../source/chapters/13_lists/lists.rst:627
msgid "r"
msgstr "r"

#: ../../source/chapters/13_lists/lists.rst:629
msgid "52"
msgstr "52"

#: ../../source/chapters/13_lists/lists.rst:629
msgid "4"
msgstr "4"

#: ../../source/chapters/13_lists/lists.rst:629
msgid "73"
msgstr "73"

#: ../../source/chapters/13_lists/lists.rst:629
msgid "I"
msgstr "I"

#: ../../source/chapters/13_lists/lists.rst:629
msgid "94"
msgstr "94"

#: ../../source/chapters/13_lists/lists.rst:629
msgid "^"
msgstr "^"

#: ../../source/chapters/13_lists/lists.rst:629
msgid "115"
msgstr "115"

#: ../../source/chapters/13_lists/lists.rst:629
msgid "s"
msgstr "s"

#: ../../source/chapters/13_lists/lists.rst:631
msgid "53"
msgstr "53"

#: ../../source/chapters/13_lists/lists.rst:631
msgid "5"
msgstr "5"

#: ../../source/chapters/13_lists/lists.rst:631
msgid "74"
msgstr "74"

#: ../../source/chapters/13_lists/lists.rst:631
msgid "J"
msgstr "J"

#: ../../source/chapters/13_lists/lists.rst:631
msgid "95"
msgstr "95"

#: ../../source/chapters/13_lists/lists.rst:631
msgid "_"
msgstr "_"

#: ../../source/chapters/13_lists/lists.rst:631
msgid "116"
msgstr "116"

#: ../../source/chapters/13_lists/lists.rst:631
msgid "t"
msgstr "t"

#: ../../source/chapters/13_lists/lists.rst:633
msgid "54"
msgstr "54"

#: ../../source/chapters/13_lists/lists.rst:633
msgid "6"
msgstr "6"

#: ../../source/chapters/13_lists/lists.rst:633
msgid "75"
msgstr "75"

#: ../../source/chapters/13_lists/lists.rst:633
msgid "K"
msgstr "K"

#: ../../source/chapters/13_lists/lists.rst:633
msgid "96"
msgstr "96"

#: ../../source/chapters/13_lists/lists.rst:633
msgid "\\`"
msgstr "\\`"

#: ../../source/chapters/13_lists/lists.rst:633
msgid "117"
msgstr "117"

#: ../../source/chapters/13_lists/lists.rst:633
msgid "u"
msgstr "u"

#: ../../source/chapters/13_lists/lists.rst:635
msgid "55"
msgstr "55"

#: ../../source/chapters/13_lists/lists.rst:635
msgid "7"
msgstr "7"

#: ../../source/chapters/13_lists/lists.rst:635
msgid "76"
msgstr "76"

#: ../../source/chapters/13_lists/lists.rst:635
msgid "L"
msgstr "L"

#: ../../source/chapters/13_lists/lists.rst:635
msgid "97"
msgstr "97"

#: ../../source/chapters/13_lists/lists.rst:635
msgid "a"
msgstr "a"

#: ../../source/chapters/13_lists/lists.rst:635
msgid "118"
msgstr "118"

#: ../../source/chapters/13_lists/lists.rst:635
msgid "v"
msgstr "v"

#: ../../source/chapters/13_lists/lists.rst:637
msgid "56"
msgstr "56"

#: ../../source/chapters/13_lists/lists.rst:637
msgid "8"
msgstr "8"

#: ../../source/chapters/13_lists/lists.rst:637
msgid "77"
msgstr "77"

#: ../../source/chapters/13_lists/lists.rst:637
msgid "M"
msgstr "M"

#: ../../source/chapters/13_lists/lists.rst:637
msgid "98"
msgstr "98"

#: ../../source/chapters/13_lists/lists.rst:637
msgid "b"
msgstr "b"

#: ../../source/chapters/13_lists/lists.rst:637
msgid "119"
msgstr "119"

#: ../../source/chapters/13_lists/lists.rst:637
msgid "w"
msgstr "w"

#: ../../source/chapters/13_lists/lists.rst:639
msgid "57"
msgstr "57"

#: ../../source/chapters/13_lists/lists.rst:639
msgid "9"
msgstr "9"

#: ../../source/chapters/13_lists/lists.rst:639
msgid "78"
msgstr "78"

#: ../../source/chapters/13_lists/lists.rst:639
msgid "N"
msgstr "N"

#: ../../source/chapters/13_lists/lists.rst:639
msgid "99"
msgstr "99"

#: ../../source/chapters/13_lists/lists.rst:639
msgid "c"
msgstr "c"

#: ../../source/chapters/13_lists/lists.rst:639
msgid "120"
msgstr "120"

#: ../../source/chapters/13_lists/lists.rst:639
msgid "x"
msgstr "x"

#: ../../source/chapters/13_lists/lists.rst:641
msgid "58"
msgstr "58"

#: ../../source/chapters/13_lists/lists.rst:641
msgid ":"
msgstr ":"

#: ../../source/chapters/13_lists/lists.rst:641
msgid "79"
msgstr "79"

#: ../../source/chapters/13_lists/lists.rst:641
msgid "O"
msgstr "O"

#: ../../source/chapters/13_lists/lists.rst:641
msgid "100"
msgstr "100"

#: ../../source/chapters/13_lists/lists.rst:641
msgid "d"
msgstr "d"

#: ../../source/chapters/13_lists/lists.rst:641
msgid "121"
msgstr "121"

#: ../../source/chapters/13_lists/lists.rst:641
msgid "y"
msgstr "y"

#: ../../source/chapters/13_lists/lists.rst:643
msgid "59"
msgstr "59"

#: ../../source/chapters/13_lists/lists.rst:643
msgid ";"
msgstr ";"

#: ../../source/chapters/13_lists/lists.rst:643
msgid "80"
msgstr "80"

#: ../../source/chapters/13_lists/lists.rst:643
msgid "P"
msgstr "p"

#: ../../source/chapters/13_lists/lists.rst:643
msgid "101"
msgstr "101"

#: ../../source/chapters/13_lists/lists.rst:643
msgid "e"
msgstr "e"

#: ../../source/chapters/13_lists/lists.rst:643
msgid "122"
msgstr "122"

#: ../../source/chapters/13_lists/lists.rst:643
msgid "z"
msgstr "z"

#: ../../source/chapters/13_lists/lists.rst:645
msgid "60"
msgstr "60"

#: ../../source/chapters/13_lists/lists.rst:645
msgid "<"
msgstr "<"

#: ../../source/chapters/13_lists/lists.rst:645
msgid "81"
msgstr "81"

#: ../../source/chapters/13_lists/lists.rst:645
msgid "Q"
msgstr "Q"

#: ../../source/chapters/13_lists/lists.rst:645
msgid "102"
msgstr "102"

#: ../../source/chapters/13_lists/lists.rst:645
msgid "f"
msgstr "f"

#: ../../source/chapters/13_lists/lists.rst:648
msgid ""
"For more information about ASCII (which has the same values as Unicode "
"for the Western alphabet) see:"
msgstr ""
"Für mehr Information zu ASCII (das die gleichen Werte wie Unicode für das"
" Western-Alphabet verwendet) siehe:"

#: ../../source/chapters/13_lists/lists.rst:651
msgid "http://en.wikipedia.org/wiki/ASCII"
msgstr "http://de.wikipedia.org/wiki/ASCII"

#: ../../source/chapters/13_lists/lists.rst:653
msgid "For a video that explains the beauty of Unicode, see here:"
msgstr "Ein Video, das die Schönheit von Unicode erklärt, findest du hier:"

#: ../../source/chapters/13_lists/lists.rst:655
msgid "http://hackaday.com/2013/09/27/utf-8-the-most-elegant-hack"
msgstr "http://hackaday.com/2013/09/27/utf-8-the-most-elegant-hack"

#: ../../source/chapters/13_lists/lists.rst:657
msgid ""
"This next set of code converts each of the letters in the prior example "
"to its ordinal value using UTF-8:"
msgstr ""
"Der nächste Code konvertiert jeden Buchstaben im vorigen Beispiel in "
"seinen Ordinalwert unter Verwendung von UTF-8:"

#: ../../source/chapters/13_lists/lists.rst:660
msgid ""
"plain_text = \"This is a test. ABC abc\"\n"
"\n"
"for c in plain_text:\n"
"    print(ord(c), end=\" \")"
msgstr ""
"plain_text = \"This is a test. ABC abc\"\n"
"\n"
"for c in plain_text:\n"
"    print(ord(c), end=\" \")"

#: ../../source/chapters/13_lists/lists.rst:667
msgid ""
"This next program takes each UTF-8 value and adds one to it. Then it "
"prints the new UTF-8 value, then converts the value back to a letter."
msgstr ""
"Das nächste Programm nimmt jeden UTF-8-Wert und addiert eins zu ihm. "
"Danach gibt es den neuen UTF-8-Wert aus und konvertiert den Wert zurück "
"in einen Buchstaben."

#: ../../source/chapters/13_lists/lists.rst:671
msgid ""
"plain_text = \"This is a test. ABC abc\"\n"
"\n"
"for c in plain_text:\n"
"    x = ord(c)\n"
"    x = x + 1\n"
"    c2 = chr(x)\n"
"    print(c2, end=\"\")"
msgstr ""
"plain_text = \"This is a test. ABC abc\"\n"
"\n"
"for c in plain_text:\n"
"    x = ord(c)\n"
"    x = x + 1\n"
"    c2 = chr(x)\n"
"    print(c2, end=\"\")"

#: ../../source/chapters/13_lists/lists.rst:681
msgid ""
"The next code listing takes each UTF-8 value and adds one to it, then "
"converts the value back to a letter."
msgstr ""
"Das nächste Programm nimmt jeden UTF-8-Wert, addiert eins dazu und "
"konvertiert den Wert zurück in einen Buchstaben."

#: ../../source/chapters/13_lists/lists.rst:685
#, fuzzy
msgid ".. image:: chapters\\13_lists\\encrypt.png"
msgstr ".. image:: chapters/13_lists/encrypt.png"

#: ../../source/chapters/13_lists/lists.rst:686
msgid "simple_encryption.py"
msgstr "simple_encryption.py"

#: ../../source/chapters/13_lists/lists.rst:686
msgid ""
"# Sample Python/Pygame Programs\n"
"# Simpson College Computer Science\n"
"# http://programarcadegames.com/\n"
"# http://simpson.edu/computer-science/\n"
"\n"
"# Explanation video: http://youtu.be/sxFIxD8Gd3A\n"
"\n"
"plain_text = \"This is a test. ABC abc\"\n"
"\n"
"encrypted_text = \"\"\n"
"for c in plain_text:\n"
"    x = ord(c)\n"
"    x = x + 1\n"
"    c2 = chr(x)\n"
"    encrypted_text = encrypted_text + c2\n"
"print(encrypted_text)"
msgstr ""
"# Sample Python/Pygame Programs\n"
"# Simpson College Computer Science\n"
"# http://programarcadegames.com/\n"
"# http://simpson.edu/computer-science/\n"
"\n"
"# Explanation video: http://youtu.be/sxFIxD8Gd3A\n"
"\n"
"plain_text = \"This is a test. ABC abc\"\n"
"\n"
"encrypted_text = \"\"\n"
"for c in plain_text:\n"
"    x = ord(c)\n"
"    x = x + 1\n"
"    c2 = chr(x)\n"
"    encrypted_text = encrypted_text + c2\n"
"print(encrypted_text)"

#: ../../source/chapters/13_lists/lists.rst:707
msgid ""
"Finally, the last code takes each UTF-8 value and subtracts one from it, "
"then converts the value back to a letter. By feeding this program the "
"output of the previous program, it serves as a decoder for text encoded "
"by the prior example."
msgstr ""
"Zum Schluss nimmt das letzte Programm jeden UTF-8-Wert, zieht eins davon "
"ab und konvertiert den Wert dann zurück in einen Buchstaben. Wenn man die"
" Ausgabe des vorigen Programms in dieses füttert, dann dekodiert es den "
"Text, den das vorige Programm kodiert hat."

#: ../../source/chapters/13_lists/lists.rst:712
#, fuzzy
msgid ".. image:: chapters\\13_lists\\decrypt.png"
msgstr ".. image:: chapters/13_lists/decrypt.png"

#: ../../source/chapters/13_lists/lists.rst:713
msgid "simple_decryption.py"
msgstr "simple_decryption.py"

#: ../../source/chapters/13_lists/lists.rst:713
msgid ""
"# Sample Python/Pygame Programs\n"
"# Simpson College Computer Science\n"
"# http://programarcadegames.com/\n"
"# http://simpson.edu/computer-science/\n"
"\n"
"# Explanation video: http://youtu.be/sxFIxD8Gd3A\n"
"\n"
"encrypted_text = \"Uijt!jt!b!uftu/!BCD!bcd\"\n"
"\n"
"plain_text = \"\"\n"
"for c in encrypted_text:\n"
"    x = ord(c)\n"
"    x = x - 1\n"
"    c2 = chr(x)\n"
"    plain_text = plain_text + c2\n"
"print(plain_text)"
msgstr ""
"# Sample Python/Pygame Programs\n"
"# Simpson College Computer Science\n"
"# http://programarcadegames.com/\n"
"# http://simpson.edu/computer-science/\n"
"\n"
"# Explanation video: http://youtu.be/sxFIxD8Gd3A\n"
"\n"
"encrypted_text = \"Uijt!jt!b!uftu/!BCD!bcd\"\n"
"\n"
"plain_text = \"\"\n"
"for c in encrypted_text:\n"
"    x = ord(c)\n"
"    x = x - 1\n"
"    c2 = chr(x)\n"
"    plain_text = plain_text + c2\n"
"print(plain_text)"

#: ../../source/chapters/13_lists/lists.rst:735
msgid "Associative Arrays"
msgstr "Assoziative Arrays"

#: ../../source/chapters/13_lists/lists.rst:737
msgid ""
"Python is not limited to using numbers as an array index. It is also "
"possible to use an associative array. An associative array works like "
"this:"
msgstr ""
"Python ist nicht auf die Verwendung von Zahlen als Index eingeschränkt. "
"Es ist auch möglich, ein assoziatives Array zu verwenden. Ein "
"assoziatives Array funktioniert wie folgt:"

#: ../../source/chapters/13_lists/lists.rst:740
msgid ""
"# Create an empty associative array\n"
"# (Note the curly braces.)\n"
"x = {}\n"
"\n"
"# Add some stuff to it\n"
"x[\"fred\"] = 2\n"
"x[\"scooby\"] = 8\n"
"x[\"wilma\"] = 1\n"
"\n"
"# Fetch and print an item\n"
"print(x[\"fred\"])"
msgstr ""
"# Create an empty associative array\n"
"# (Note the curly braces.)\n"
"x = {}\n"
"\n"
"# Add some stuff to it\n"
"x[\"fred\"] = 2\n"
"x[\"scooby\"] = 8\n"
"x[\"wilma\"] = 1\n"
"\n"
"# Fetch and print an item\n"
"print(x[\"fred\"])"

#: ../../source/chapters/13_lists/lists.rst:755
msgid ""
"You won't really need associative arrays for this class, but I think it "
"is important to point out that it is possible."
msgstr ""
"In diesem Kurs wirst du nicht wirklich assoziative Arrays benötigen, aber"
" ich denke es ist wichtig, zu zeigen, dass es möglich ist."

#~ msgid ""
#~ "# Create an empty list\n"
#~ "my_list = []"
#~ msgstr "Erstelle eine leere Liste"

